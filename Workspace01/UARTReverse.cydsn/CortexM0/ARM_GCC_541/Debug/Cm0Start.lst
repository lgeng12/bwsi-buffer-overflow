ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccRJeaHW.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"Cm0Start.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.noinit,"aw",%progbits
  20              		.align	2
  21              		.type	cySysNoInitDataValid, %object
  22              		.size	cySysNoInitDataValid, 4
  23              	cySysNoInitDataValid:
  24 0000 00000000 		.space	4
  25              		.section	.text.IntDefaultHandler,"ax",%progbits
  26              		.align	2
  27              		.global	IntDefaultHandler
  28              		.code	16
  29              		.thumb_func
  30              		.type	IntDefaultHandler, %function
  31              	IntDefaultHandler:
  32              	.LFB0:
  33              		.file 1 "Generated_Source\\PSoC4\\Cm0Start.c"
   1:Generated_Source\PSoC4/Cm0Start.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/Cm0Start.c **** * \file Cm0Start.c
   3:Generated_Source\PSoC4/Cm0Start.c **** * \version 5.70
   4:Generated_Source\PSoC4/Cm0Start.c **** *
   5:Generated_Source\PSoC4/Cm0Start.c **** * \brief Startup code for the ARM CM0.
   6:Generated_Source\PSoC4/Cm0Start.c **** *
   7:Generated_Source\PSoC4/Cm0Start.c **** ********************************************************************************
   8:Generated_Source\PSoC4/Cm0Start.c **** * \copyright
   9:Generated_Source\PSoC4/Cm0Start.c **** * Copyright 2010-2018, Cypress Semiconductor Corporation.  All rights reserved.
  10:Generated_Source\PSoC4/Cm0Start.c **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC4/Cm0Start.c **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC4/Cm0Start.c **** * the software package with which this file was provided.
  13:Generated_Source\PSoC4/Cm0Start.c **** *******************************************************************************/
  14:Generated_Source\PSoC4/Cm0Start.c **** 
  15:Generated_Source\PSoC4/Cm0Start.c **** #include <limits.h>
  16:Generated_Source\PSoC4/Cm0Start.c **** #include "cydevice_trm.h"
  17:Generated_Source\PSoC4/Cm0Start.c **** #include "cytypes.h"
  18:Generated_Source\PSoC4/Cm0Start.c **** #include "cyfitter_cfg.h"
  19:Generated_Source\PSoC4/Cm0Start.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/Cm0Start.c **** #include "cyfitter.h"
  21:Generated_Source\PSoC4/Cm0Start.c **** #include "cyapicallbacks.h"
  22:Generated_Source\PSoC4/Cm0Start.c **** 
  23:Generated_Source\PSoC4/Cm0Start.c **** #define CY_NUM_VECTORS              (CY_INT_IRQ_BASE + CY_NUM_INTERRUPTS)
  24:Generated_Source\PSoC4/Cm0Start.c **** 
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccRJeaHW.s 			page 2


  25:Generated_Source\PSoC4/Cm0Start.c **** #if (CY_IP_CPUSS_CM0)
  26:Generated_Source\PSoC4/Cm0Start.c ****     #define CY_CPUSS_CONFIG_VECT_IN_RAM (( uint32 ) 0x01)
  27:Generated_Source\PSoC4/Cm0Start.c **** #endif /* (CY_IP_CPUSS_CM0) */
  28:Generated_Source\PSoC4/Cm0Start.c **** 
  29:Generated_Source\PSoC4/Cm0Start.c **** 
  30:Generated_Source\PSoC4/Cm0Start.c **** #if (CY_IP_CPUSS_CM0)
  31:Generated_Source\PSoC4/Cm0Start.c ****     /* CPUSS Configuration register */
  32:Generated_Source\PSoC4/Cm0Start.c ****     #define CY_CPUSS_CONFIG_REG         (*(reg32 *) CYREG_CPUSS_CONFIG)
  33:Generated_Source\PSoC4/Cm0Start.c ****     #define CY_CPUSS_CONFIG_PTR         ( (reg32 *) CYREG_CPUSS_CONFIG)
  34:Generated_Source\PSoC4/Cm0Start.c **** #endif /* (CY_IP_CPUSS_CM0) */
  35:Generated_Source\PSoC4/Cm0Start.c **** 
  36:Generated_Source\PSoC4/Cm0Start.c **** 
  37:Generated_Source\PSoC4/Cm0Start.c **** #if defined (__ICCARM__)
  38:Generated_Source\PSoC4/Cm0Start.c ****     #define CY_NUM_ROM_VECTORS      (CY_NUM_VECTORS)
  39:Generated_Source\PSoC4/Cm0Start.c **** #else
  40:Generated_Source\PSoC4/Cm0Start.c ****     #define CY_NUM_ROM_VECTORS      (4u)
  41:Generated_Source\PSoC4/Cm0Start.c **** #endif  /* defined (__ICCARM__) */
  42:Generated_Source\PSoC4/Cm0Start.c **** 
  43:Generated_Source\PSoC4/Cm0Start.c **** /* Vector table address in SRAM */
  44:Generated_Source\PSoC4/Cm0Start.c **** #define CY_CPUSS_CONFIG_VECT_ADDR_IN_RAM    (0x20000000u)
  45:Generated_Source\PSoC4/Cm0Start.c **** 
  46:Generated_Source\PSoC4/Cm0Start.c **** #ifndef CY_SYS_INITIAL_STACK_POINTER
  47:Generated_Source\PSoC4/Cm0Start.c **** 
  48:Generated_Source\PSoC4/Cm0Start.c ****     #if defined(__ARMCC_VERSION)
  49:Generated_Source\PSoC4/Cm0Start.c ****         #define CY_SYS_INITIAL_STACK_POINTER ((cyisraddress)(uint32)&Image$$ARM_LIB_STACK$$ZI$$Limi
  50:Generated_Source\PSoC4/Cm0Start.c ****     #elif defined (__GNUC__)
  51:Generated_Source\PSoC4/Cm0Start.c ****         #define CY_SYS_INITIAL_STACK_POINTER (&__cy_stack)
  52:Generated_Source\PSoC4/Cm0Start.c ****     #elif defined (__ICCARM__)
  53:Generated_Source\PSoC4/Cm0Start.c ****         #pragma language=extended
  54:Generated_Source\PSoC4/Cm0Start.c ****         #pragma segment="CSTACK"
  55:Generated_Source\PSoC4/Cm0Start.c ****         #define CY_SYS_INITIAL_STACK_POINTER  { .__ptr = __sfe( "CSTACK" ) }
  56:Generated_Source\PSoC4/Cm0Start.c **** 
  57:Generated_Source\PSoC4/Cm0Start.c ****         extern void __iar_program_start( void );
  58:Generated_Source\PSoC4/Cm0Start.c ****         extern void __iar_data_init3 (void);
  59:Generated_Source\PSoC4/Cm0Start.c ****     #endif  /* (__ARMCC_VERSION) */
  60:Generated_Source\PSoC4/Cm0Start.c **** 
  61:Generated_Source\PSoC4/Cm0Start.c **** #endif /* CY_SYS_INITIAL_STACK_POINTER */
  62:Generated_Source\PSoC4/Cm0Start.c **** 
  63:Generated_Source\PSoC4/Cm0Start.c **** 
  64:Generated_Source\PSoC4/Cm0Start.c **** #if defined(__GNUC__)
  65:Generated_Source\PSoC4/Cm0Start.c ****     #include <errno.h>
  66:Generated_Source\PSoC4/Cm0Start.c ****     extern int  end;
  67:Generated_Source\PSoC4/Cm0Start.c **** #endif  /* defined(__GNUC__) */
  68:Generated_Source\PSoC4/Cm0Start.c **** 
  69:Generated_Source\PSoC4/Cm0Start.c **** /* Extern functions */
  70:Generated_Source\PSoC4/Cm0Start.c **** extern void CyBtldr_CheckLaunch(void);
  71:Generated_Source\PSoC4/Cm0Start.c **** 
  72:Generated_Source\PSoC4/Cm0Start.c **** /* Function prototypes */
  73:Generated_Source\PSoC4/Cm0Start.c **** void initialize_psoc(void);
  74:Generated_Source\PSoC4/Cm0Start.c **** 
  75:Generated_Source\PSoC4/Cm0Start.c **** /* Global variables */
  76:Generated_Source\PSoC4/Cm0Start.c **** #if !defined (__ICCARM__)
  77:Generated_Source\PSoC4/Cm0Start.c ****     CY_NOINIT static uint32 cySysNoInitDataValid;
  78:Generated_Source\PSoC4/Cm0Start.c **** #endif  /* !defined (__ICCARM__) */
  79:Generated_Source\PSoC4/Cm0Start.c **** 
  80:Generated_Source\PSoC4/Cm0Start.c **** 
  81:Generated_Source\PSoC4/Cm0Start.c **** #if (CYDEV_PROJ_TYPE != CYDEV_PROJ_TYPE_STANDARD)
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccRJeaHW.s 			page 3


  82:Generated_Source\PSoC4/Cm0Start.c **** 
  83:Generated_Source\PSoC4/Cm0Start.c ****     /*******************************************************************************
  84:Generated_Source\PSoC4/Cm0Start.c ****     This variable is used by the Bootloader/Bootloadable components to schedule
  85:Generated_Source\PSoC4/Cm0Start.c ****     what application will be started after a software reset.
  86:Generated_Source\PSoC4/Cm0Start.c ****     *******************************************************************************/
  87:Generated_Source\PSoC4/Cm0Start.c ****     #if (__ARMCC_VERSION)
  88:Generated_Source\PSoC4/Cm0Start.c ****         __attribute__ ((section(".bootloaderruntype"), zero_init))
  89:Generated_Source\PSoC4/Cm0Start.c ****     #elif defined (__GNUC__)
  90:Generated_Source\PSoC4/Cm0Start.c ****         __attribute__ ((section(".bootloaderruntype")))
  91:Generated_Source\PSoC4/Cm0Start.c ****     #elif defined (__ICCARM__)
  92:Generated_Source\PSoC4/Cm0Start.c ****         #pragma location=".bootloaderruntype"
  93:Generated_Source\PSoC4/Cm0Start.c ****     #endif /* (__ARMCC_VERSION) */
  94:Generated_Source\PSoC4/Cm0Start.c ****     volatile uint32 cyBtldrRunType;
  95:Generated_Source\PSoC4/Cm0Start.c **** 
  96:Generated_Source\PSoC4/Cm0Start.c **** #endif  /* (CYDEV_PROJ_TYPE != CYDEV_PROJ_TYPE_STANDARD) */
  97:Generated_Source\PSoC4/Cm0Start.c **** 
  98:Generated_Source\PSoC4/Cm0Start.c **** 
  99:Generated_Source\PSoC4/Cm0Start.c **** /*******************************************************************************
 100:Generated_Source\PSoC4/Cm0Start.c **** * Function Name: IntDefaultHandler
 101:Generated_Source\PSoC4/Cm0Start.c **** ****************************************************************************//**
 102:Generated_Source\PSoC4/Cm0Start.c **** *
 103:Generated_Source\PSoC4/Cm0Start.c **** *  This function is called for all interrupts, other than a reset that is called
 104:Generated_Source\PSoC4/Cm0Start.c **** *  before the system is setup.
 105:Generated_Source\PSoC4/Cm0Start.c **** *
 106:Generated_Source\PSoC4/Cm0Start.c **** *******************************************************************************/
 107:Generated_Source\PSoC4/Cm0Start.c **** CY_NORETURN
 108:Generated_Source\PSoC4/Cm0Start.c **** CY_ISR(IntDefaultHandler)
 109:Generated_Source\PSoC4/Cm0Start.c **** {
  34              		.loc 1 109 0
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 0
  37              		@ frame_needed = 1, uses_anonymous_args = 0
  38 0000 80B5     		push	{r7, lr}
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42 0002 00AF     		add	r7, sp, #0
  43              		.cfi_def_cfa_register 7
 110:Generated_Source\PSoC4/Cm0Start.c ****     /***************************************************************************
 111:Generated_Source\PSoC4/Cm0Start.c ****     * We must not get here. If we do, a serious problem occurs, so go into
 112:Generated_Source\PSoC4/Cm0Start.c ****     * an infinite loop.
 113:Generated_Source\PSoC4/Cm0Start.c ****     ***************************************************************************/
 114:Generated_Source\PSoC4/Cm0Start.c **** 
 115:Generated_Source\PSoC4/Cm0Start.c ****     #if defined(__GNUC__)
 116:Generated_Source\PSoC4/Cm0Start.c ****         if (errno == ENOMEM)
  44              		.loc 1 116 0
  45 0004 FFF7FEFF 		bl	__errno
  46 0008 0300     		movs	r3, r0
  47 000a 1B68     		ldr	r3, [r3]
  48 000c 0C2B     		cmp	r3, #12
  49 000e 00D1     		bne	.L2
  50              	.L3:
 117:Generated_Source\PSoC4/Cm0Start.c ****         {
 118:Generated_Source\PSoC4/Cm0Start.c ****             #ifdef CY_BOOT_INT_DEFAULT_HANDLER_ENOMEM_EXCEPTION_CALLBACK
 119:Generated_Source\PSoC4/Cm0Start.c ****                 CyBoot_IntDefaultHandler_Enomem_Exception_Callback();
 120:Generated_Source\PSoC4/Cm0Start.c ****             #endif /* CY_BOOT_INT_DEFAULT_HANDLER_ENOMEM_EXCEPTION_CALLBACK */
 121:Generated_Source\PSoC4/Cm0Start.c ****             
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccRJeaHW.s 			page 4


 122:Generated_Source\PSoC4/Cm0Start.c ****             while(1)
 123:Generated_Source\PSoC4/Cm0Start.c ****             {
 124:Generated_Source\PSoC4/Cm0Start.c ****                 /* Out Of Heap Space
 125:Generated_Source\PSoC4/Cm0Start.c ****                  * This can be increased in the System tab of the Design Wide Resources.
 126:Generated_Source\PSoC4/Cm0Start.c ****                  */
 127:Generated_Source\PSoC4/Cm0Start.c ****             }
  51              		.loc 1 127 0 discriminator 1
  52 0010 FEE7     		b	.L3
  53              	.L2:
 128:Generated_Source\PSoC4/Cm0Start.c ****         }
 129:Generated_Source\PSoC4/Cm0Start.c ****         else
 130:Generated_Source\PSoC4/Cm0Start.c ****     #endif
 131:Generated_Source\PSoC4/Cm0Start.c ****         {
 132:Generated_Source\PSoC4/Cm0Start.c ****             #ifdef CY_BOOT_INT_DEFAULT_HANDLER_EXCEPTION_ENTRY_CALLBACK
 133:Generated_Source\PSoC4/Cm0Start.c ****                 CyBoot_IntDefaultHandler_Exception_EntryCallback();
 134:Generated_Source\PSoC4/Cm0Start.c ****             #endif /* CY_BOOT_INT_DEFAULT_HANDLER_EXCEPTION_ENTRY_CALLBACK */
 135:Generated_Source\PSoC4/Cm0Start.c **** 
 136:Generated_Source\PSoC4/Cm0Start.c ****             while(1)
 137:Generated_Source\PSoC4/Cm0Start.c ****             {
 138:Generated_Source\PSoC4/Cm0Start.c **** 
 139:Generated_Source\PSoC4/Cm0Start.c ****             }
  54              		.loc 1 139 0 discriminator 2
  55 0012 FEE7     		b	.L2
  56              		.cfi_endproc
  57              	.LFE0:
  58              		.size	IntDefaultHandler, .-IntDefaultHandler
  59              		.section	.text._exit,"ax",%progbits
  60              		.align	2
  61              		.weak	_exit
  62              		.code	16
  63              		.thumb_func
  64              		.type	_exit, %function
  65              	_exit:
  66              	.LFB1:
 140:Generated_Source\PSoC4/Cm0Start.c ****         }
 141:Generated_Source\PSoC4/Cm0Start.c **** }
 142:Generated_Source\PSoC4/Cm0Start.c **** 
 143:Generated_Source\PSoC4/Cm0Start.c **** #if defined(__ARMCC_VERSION)
 144:Generated_Source\PSoC4/Cm0Start.c **** 
 145:Generated_Source\PSoC4/Cm0Start.c **** /* Local function for device reset. */
 146:Generated_Source\PSoC4/Cm0Start.c **** extern void Reset(void);
 147:Generated_Source\PSoC4/Cm0Start.c **** 
 148:Generated_Source\PSoC4/Cm0Start.c **** /* Application entry point. */
 149:Generated_Source\PSoC4/Cm0Start.c **** extern void $Super$$main(void);
 150:Generated_Source\PSoC4/Cm0Start.c **** 
 151:Generated_Source\PSoC4/Cm0Start.c **** /* Linker-generated Stack Base addresses, Two Region and One Region */
 152:Generated_Source\PSoC4/Cm0Start.c **** extern unsigned long Image$$ARM_LIB_STACK$$ZI$$Limit;
 153:Generated_Source\PSoC4/Cm0Start.c **** 
 154:Generated_Source\PSoC4/Cm0Start.c **** /* RealView C Library initialization. */
 155:Generated_Source\PSoC4/Cm0Start.c **** extern int __main(void);
 156:Generated_Source\PSoC4/Cm0Start.c **** 
 157:Generated_Source\PSoC4/Cm0Start.c **** 
 158:Generated_Source\PSoC4/Cm0Start.c **** /*******************************************************************************
 159:Generated_Source\PSoC4/Cm0Start.c **** * Function Name: Reset
 160:Generated_Source\PSoC4/Cm0Start.c **** ****************************************************************************//**
 161:Generated_Source\PSoC4/Cm0Start.c **** *
 162:Generated_Source\PSoC4/Cm0Start.c **** * This function handles the reset interrupt for the MDK toolchains.
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccRJeaHW.s 			page 5


 163:Generated_Source\PSoC4/Cm0Start.c **** * This is the first bit of code that is executed at startup.
 164:Generated_Source\PSoC4/Cm0Start.c **** *
 165:Generated_Source\PSoC4/Cm0Start.c **** *******************************************************************************/
 166:Generated_Source\PSoC4/Cm0Start.c **** void Reset(void)
 167:Generated_Source\PSoC4/Cm0Start.c **** {
 168:Generated_Source\PSoC4/Cm0Start.c ****     #if (CYDEV_PROJ_TYPE == CYDEV_PROJ_TYPE_LOADABLE || CYDEV_PROJ_TYPE == CYDEV_PROJ_TYPE_LOADABLE
 169:Generated_Source\PSoC4/Cm0Start.c ****         /* The bootloadable application image is started at Reset() handler
 170:Generated_Source\PSoC4/Cm0Start.c ****         * as a result of a branch instruction execution from the bootloader.
 171:Generated_Source\PSoC4/Cm0Start.c ****         * So, the stack pointer needs to be reset to be sure that
 172:Generated_Source\PSoC4/Cm0Start.c ****         * there is no garbage in the stack.
 173:Generated_Source\PSoC4/Cm0Start.c ****         */
 174:Generated_Source\PSoC4/Cm0Start.c ****         register uint32_t msp __asm("msp");
 175:Generated_Source\PSoC4/Cm0Start.c ****         msp = (uint32_t)&Image$$ARM_LIB_STACK$$ZI$$Limit;
 176:Generated_Source\PSoC4/Cm0Start.c ****     #endif /*(CYDEV_PROJ_TYPE == CYDEV_PROJ_TYPE_LOADABLE || CYDEV_PROJ_TYPE == CYDEV_PROJ_TYPE_LOA
 177:Generated_Source\PSoC4/Cm0Start.c **** 
 178:Generated_Source\PSoC4/Cm0Start.c ****     #if(CY_IP_SRSSLT)
 179:Generated_Source\PSoC4/Cm0Start.c ****         CySysWdtDisable();
 180:Generated_Source\PSoC4/Cm0Start.c ****     #endif  /* (CY_IP_SRSSLT) */
 181:Generated_Source\PSoC4/Cm0Start.c **** 
 182:Generated_Source\PSoC4/Cm0Start.c ****     #if ((CYDEV_BOOTLOADER_ENABLE) && (CYDEV_PROJ_TYPE != CYDEV_PROJ_TYPE_LOADABLEANDBOOTLOADER))
 183:Generated_Source\PSoC4/Cm0Start.c ****         CyBtldr_CheckLaunch();
 184:Generated_Source\PSoC4/Cm0Start.c ****     #endif /* ((CYDEV_BOOTLOADER_ENABLE) && (CYDEV_PROJ_TYPE != CYDEV_PROJ_TYPE_LOADABLEANDBOOTLOAD
 185:Generated_Source\PSoC4/Cm0Start.c **** 
 186:Generated_Source\PSoC4/Cm0Start.c ****     __main();
 187:Generated_Source\PSoC4/Cm0Start.c **** }
 188:Generated_Source\PSoC4/Cm0Start.c **** 
 189:Generated_Source\PSoC4/Cm0Start.c **** /*******************************************************************************
 190:Generated_Source\PSoC4/Cm0Start.c **** * Function Name: $Sub$$main
 191:Generated_Source\PSoC4/Cm0Start.c **** ****************************************************************************//**
 192:Generated_Source\PSoC4/Cm0Start.c **** *
 193:Generated_Source\PSoC4/Cm0Start.c **** * This function is called immediately before the users main
 194:Generated_Source\PSoC4/Cm0Start.c **** *
 195:Generated_Source\PSoC4/Cm0Start.c **** *******************************************************************************/
 196:Generated_Source\PSoC4/Cm0Start.c **** __attribute__ ((noreturn, __noinline__))
 197:Generated_Source\PSoC4/Cm0Start.c **** void $Sub$$main(void)
 198:Generated_Source\PSoC4/Cm0Start.c **** {
 199:Generated_Source\PSoC4/Cm0Start.c ****     initialize_psoc();
 200:Generated_Source\PSoC4/Cm0Start.c **** 
 201:Generated_Source\PSoC4/Cm0Start.c ****     /* Call original main */
 202:Generated_Source\PSoC4/Cm0Start.c ****     $Super$$main();
 203:Generated_Source\PSoC4/Cm0Start.c **** 
 204:Generated_Source\PSoC4/Cm0Start.c ****     while (1)
 205:Generated_Source\PSoC4/Cm0Start.c ****     {
 206:Generated_Source\PSoC4/Cm0Start.c ****         /* If main returns it is undefined what we should do. */
 207:Generated_Source\PSoC4/Cm0Start.c ****     }
 208:Generated_Source\PSoC4/Cm0Start.c **** }
 209:Generated_Source\PSoC4/Cm0Start.c **** 
 210:Generated_Source\PSoC4/Cm0Start.c **** #elif defined(__GNUC__)
 211:Generated_Source\PSoC4/Cm0Start.c **** 
 212:Generated_Source\PSoC4/Cm0Start.c **** /* Stack Base address */
 213:Generated_Source\PSoC4/Cm0Start.c **** extern void __cy_stack(void);
 214:Generated_Source\PSoC4/Cm0Start.c **** 
 215:Generated_Source\PSoC4/Cm0Start.c **** /* Application entry point. */
 216:Generated_Source\PSoC4/Cm0Start.c **** extern int main(void);
 217:Generated_Source\PSoC4/Cm0Start.c **** 
 218:Generated_Source\PSoC4/Cm0Start.c **** /* The static objects constructors initializer */
 219:Generated_Source\PSoC4/Cm0Start.c **** extern void __libc_init_array(void);
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccRJeaHW.s 			page 6


 220:Generated_Source\PSoC4/Cm0Start.c **** 
 221:Generated_Source\PSoC4/Cm0Start.c **** typedef unsigned char __cy_byte_align8 __attribute ((aligned (8)));
 222:Generated_Source\PSoC4/Cm0Start.c **** 
 223:Generated_Source\PSoC4/Cm0Start.c **** struct __cy_region
 224:Generated_Source\PSoC4/Cm0Start.c **** {
 225:Generated_Source\PSoC4/Cm0Start.c ****     __cy_byte_align8 *init; /* Initial contents of this region.  */
 226:Generated_Source\PSoC4/Cm0Start.c ****     __cy_byte_align8 *data; /* Start address of region.  */
 227:Generated_Source\PSoC4/Cm0Start.c ****     size_t init_size;       /* Size of initial data.  */
 228:Generated_Source\PSoC4/Cm0Start.c ****     size_t zero_size;       /* Additional size to be zeroed.  */
 229:Generated_Source\PSoC4/Cm0Start.c **** };
 230:Generated_Source\PSoC4/Cm0Start.c **** 
 231:Generated_Source\PSoC4/Cm0Start.c **** extern const struct __cy_region __cy_regions[];
 232:Generated_Source\PSoC4/Cm0Start.c **** extern const char __cy_region_num __attribute__((weak));
 233:Generated_Source\PSoC4/Cm0Start.c **** #define __cy_region_num ((size_t)&__cy_region_num)
 234:Generated_Source\PSoC4/Cm0Start.c **** 
 235:Generated_Source\PSoC4/Cm0Start.c **** 
 236:Generated_Source\PSoC4/Cm0Start.c **** /*******************************************************************************
 237:Generated_Source\PSoC4/Cm0Start.c **** * System Calls of the Red Hat newlib C Library
 238:Generated_Source\PSoC4/Cm0Start.c **** *******************************************************************************/
 239:Generated_Source\PSoC4/Cm0Start.c **** 
 240:Generated_Source\PSoC4/Cm0Start.c **** 
 241:Generated_Source\PSoC4/Cm0Start.c **** /*******************************************************************************
 242:Generated_Source\PSoC4/Cm0Start.c **** * Function Name: _exit
 243:Generated_Source\PSoC4/Cm0Start.c **** ****************************************************************************//**
 244:Generated_Source\PSoC4/Cm0Start.c **** *
 245:Generated_Source\PSoC4/Cm0Start.c **** * Exit a program without cleaning up files. If your system doesn't provide
 246:Generated_Source\PSoC4/Cm0Start.c **** * this, it is best to avoid linking with subroutines that require it (exit,
 247:Generated_Source\PSoC4/Cm0Start.c **** * system).
 248:Generated_Source\PSoC4/Cm0Start.c **** *
 249:Generated_Source\PSoC4/Cm0Start.c **** * \param status: Status caused program exit.
 250:Generated_Source\PSoC4/Cm0Start.c **** *
 251:Generated_Source\PSoC4/Cm0Start.c **** *******************************************************************************/
 252:Generated_Source\PSoC4/Cm0Start.c **** __attribute__((weak))
 253:Generated_Source\PSoC4/Cm0Start.c **** void _exit(int status)
 254:Generated_Source\PSoC4/Cm0Start.c **** {
  67              		.loc 1 254 0
  68              		.cfi_startproc
  69              		@ args = 0, pretend = 0, frame = 8
  70              		@ frame_needed = 1, uses_anonymous_args = 0
  71 0000 80B5     		push	{r7, lr}
  72              		.cfi_def_cfa_offset 8
  73              		.cfi_offset 7, -8
  74              		.cfi_offset 14, -4
  75 0002 82B0     		sub	sp, sp, #8
  76              		.cfi_def_cfa_offset 16
  77 0004 00AF     		add	r7, sp, #0
  78              		.cfi_def_cfa_register 7
  79 0006 7860     		str	r0, [r7, #4]
 255:Generated_Source\PSoC4/Cm0Start.c ****     CyHalt((uint8) status);
  80              		.loc 1 255 0
  81 0008 7B68     		ldr	r3, [r7, #4]
  82 000a DBB2     		uxtb	r3, r3
  83 000c 1800     		movs	r0, r3
  84 000e FFF7FEFF 		bl	CyHalt
  85              	.L5:
 256:Generated_Source\PSoC4/Cm0Start.c **** 
 257:Generated_Source\PSoC4/Cm0Start.c ****     while(1)
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccRJeaHW.s 			page 7


 258:Generated_Source\PSoC4/Cm0Start.c ****     {
 259:Generated_Source\PSoC4/Cm0Start.c **** 
 260:Generated_Source\PSoC4/Cm0Start.c ****     }
  86              		.loc 1 260 0 discriminator 1
  87 0012 FEE7     		b	.L5
  88              		.cfi_endproc
  89              	.LFE1:
  90              		.size	_exit, .-_exit
  91              		.section	.text._sbrk,"ax",%progbits
  92              		.align	2
  93              		.weak	_sbrk
  94              		.code	16
  95              		.thumb_func
  96              		.type	_sbrk, %function
  97              	_sbrk:
  98              	.LFB2:
 261:Generated_Source\PSoC4/Cm0Start.c **** }
 262:Generated_Source\PSoC4/Cm0Start.c **** 
 263:Generated_Source\PSoC4/Cm0Start.c **** 
 264:Generated_Source\PSoC4/Cm0Start.c **** /*******************************************************************************
 265:Generated_Source\PSoC4/Cm0Start.c **** * Function Name: _sbrk
 266:Generated_Source\PSoC4/Cm0Start.c **** ****************************************************************************//**
 267:Generated_Source\PSoC4/Cm0Start.c **** *
 268:Generated_Source\PSoC4/Cm0Start.c **** * Increase program data space. As malloc and related functions depend on this,
 269:Generated_Source\PSoC4/Cm0Start.c **** * it is useful to have a working implementation. The following suffices for a
 270:Generated_Source\PSoC4/Cm0Start.c **** * standalone system; it exploits the symbol end automatically defined by the
 271:Generated_Source\PSoC4/Cm0Start.c **** * GNU linker.
 272:Generated_Source\PSoC4/Cm0Start.c **** *
 273:Generated_Source\PSoC4/Cm0Start.c **** * \param nbytes: The number of bytes requested (if the parameter value is positive)
 274:Generated_Source\PSoC4/Cm0Start.c **** * from the heap or returned back to the heap (if the parameter value is
 275:Generated_Source\PSoC4/Cm0Start.c **** * negative).
 276:Generated_Source\PSoC4/Cm0Start.c **** *
 277:Generated_Source\PSoC4/Cm0Start.c **** *******************************************************************************/
 278:Generated_Source\PSoC4/Cm0Start.c **** __attribute__((weak))
 279:Generated_Source\PSoC4/Cm0Start.c **** void * _sbrk (int nbytes)
 280:Generated_Source\PSoC4/Cm0Start.c **** {
  99              		.loc 1 280 0
 100              		.cfi_startproc
 101              		@ args = 0, pretend = 0, frame = 16
 102              		@ frame_needed = 1, uses_anonymous_args = 0
 103 0000 80B5     		push	{r7, lr}
 104              		.cfi_def_cfa_offset 8
 105              		.cfi_offset 7, -8
 106              		.cfi_offset 14, -4
 107 0002 84B0     		sub	sp, sp, #16
 108              		.cfi_def_cfa_offset 24
 109 0004 00AF     		add	r7, sp, #0
 110              		.cfi_def_cfa_register 7
 111 0006 7860     		str	r0, [r7, #4]
 281:Generated_Source\PSoC4/Cm0Start.c ****     extern int  end;            /* Symbol defined by linker map. Start of free memory (as symbol). 
 282:Generated_Source\PSoC4/Cm0Start.c ****     void *      returnValue;
 283:Generated_Source\PSoC4/Cm0Start.c **** 
 284:Generated_Source\PSoC4/Cm0Start.c ****     /* The statically held previous end of the heap, with its initialization. */
 285:Generated_Source\PSoC4/Cm0Start.c ****     static uint8 *heapPointer = (uint8 *) &end;                 /* Previous end */
 286:Generated_Source\PSoC4/Cm0Start.c **** 
 287:Generated_Source\PSoC4/Cm0Start.c ****     if (((heapPointer + nbytes) - (uint8 *) &end) <= CYDEV_HEAP_SIZE)
 112              		.loc 1 287 0
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccRJeaHW.s 			page 8


 113 0008 0F4B     		ldr	r3, .L10
 114 000a 1A68     		ldr	r2, [r3]
 115 000c 7B68     		ldr	r3, [r7, #4]
 116 000e D318     		adds	r3, r2, r3
 117 0010 1A00     		movs	r2, r3
 118 0012 0E4B     		ldr	r3, .L10+4
 119 0014 D31A     		subs	r3, r2, r3
 120 0016 802B     		cmp	r3, #128
 121 0018 09DC     		bgt	.L7
 288:Generated_Source\PSoC4/Cm0Start.c ****     {
 289:Generated_Source\PSoC4/Cm0Start.c ****         returnValue  = (void *) heapPointer;
 122              		.loc 1 289 0
 123 001a 0B4B     		ldr	r3, .L10
 124 001c 1B68     		ldr	r3, [r3]
 125 001e FB60     		str	r3, [r7, #12]
 290:Generated_Source\PSoC4/Cm0Start.c ****         heapPointer += nbytes;
 126              		.loc 1 290 0
 127 0020 094B     		ldr	r3, .L10
 128 0022 1A68     		ldr	r2, [r3]
 129 0024 7B68     		ldr	r3, [r7, #4]
 130 0026 D218     		adds	r2, r2, r3
 131 0028 074B     		ldr	r3, .L10
 132 002a 1A60     		str	r2, [r3]
 133 002c 07E0     		b	.L8
 134              	.L7:
 291:Generated_Source\PSoC4/Cm0Start.c ****     }
 292:Generated_Source\PSoC4/Cm0Start.c ****     else
 293:Generated_Source\PSoC4/Cm0Start.c ****     {
 294:Generated_Source\PSoC4/Cm0Start.c ****         errno = ENOMEM;
 135              		.loc 1 294 0
 136 002e FFF7FEFF 		bl	__errno
 137 0032 0300     		movs	r3, r0
 138 0034 0C22     		movs	r2, #12
 139 0036 1A60     		str	r2, [r3]
 295:Generated_Source\PSoC4/Cm0Start.c ****         returnValue = (void *) -1;
 140              		.loc 1 295 0
 141 0038 0123     		movs	r3, #1
 142 003a 5B42     		rsbs	r3, r3, #0
 143 003c FB60     		str	r3, [r7, #12]
 144              	.L8:
 296:Generated_Source\PSoC4/Cm0Start.c ****     }
 297:Generated_Source\PSoC4/Cm0Start.c **** 
 298:Generated_Source\PSoC4/Cm0Start.c ****     return (returnValue);
 145              		.loc 1 298 0
 146 003e FB68     		ldr	r3, [r7, #12]
 299:Generated_Source\PSoC4/Cm0Start.c **** }
 147              		.loc 1 299 0
 148 0040 1800     		movs	r0, r3
 149 0042 BD46     		mov	sp, r7
 150 0044 04B0     		add	sp, sp, #16
 151              		@ sp needed
 152 0046 80BD     		pop	{r7, pc}
 153              	.L11:
 154              		.align	2
 155              	.L10:
 156 0048 00000000 		.word	heapPointer.4844
 157 004c 00000000 		.word	end
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccRJeaHW.s 			page 9


 158              		.cfi_endproc
 159              	.LFE2:
 160              		.size	_sbrk, .-_sbrk
 161              		.section	.text.Start_c,"ax",%progbits
 162              		.align	2
 163              		.global	Start_c
 164              		.code	16
 165              		.thumb_func
 166              		.type	Start_c, %function
 167              	Start_c:
 168              	.LFB3:
 300:Generated_Source\PSoC4/Cm0Start.c **** 
 301:Generated_Source\PSoC4/Cm0Start.c **** 
 302:Generated_Source\PSoC4/Cm0Start.c **** /*******************************************************************************
 303:Generated_Source\PSoC4/Cm0Start.c **** * Function Name: Start_c
 304:Generated_Source\PSoC4/Cm0Start.c **** ****************************************************************************//**
 305:Generated_Source\PSoC4/Cm0Start.c **** *
 306:Generated_Source\PSoC4/Cm0Start.c **** * This function handles initializing the .data and .bss sections in
 307:Generated_Source\PSoC4/Cm0Start.c **** * preparation for running the standard c code.  Once initialization is complete
 308:Generated_Source\PSoC4/Cm0Start.c **** * it will call main().  This function will never return.
 309:Generated_Source\PSoC4/Cm0Start.c **** *
 310:Generated_Source\PSoC4/Cm0Start.c **** *******************************************************************************/
 311:Generated_Source\PSoC4/Cm0Start.c **** void Start_c(void)  __attribute__ ((noreturn, noinline));
 312:Generated_Source\PSoC4/Cm0Start.c **** void Start_c(void)
 313:Generated_Source\PSoC4/Cm0Start.c **** {
 169              		.loc 1 313 0
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 24
 172              		@ frame_needed = 1, uses_anonymous_args = 0
 173 0000 80B5     		push	{r7, lr}
 174              		.cfi_def_cfa_offset 8
 175              		.cfi_offset 7, -8
 176              		.cfi_offset 14, -4
 177 0002 86B0     		sub	sp, sp, #24
 178              		.cfi_def_cfa_offset 32
 179 0004 00AF     		add	r7, sp, #0
 180              		.cfi_def_cfa_register 7
 314:Generated_Source\PSoC4/Cm0Start.c ****     #ifdef CY_BOOT_START_C_CALLBACK
 315:Generated_Source\PSoC4/Cm0Start.c ****         CyBoot_Start_c_Callback();
 316:Generated_Source\PSoC4/Cm0Start.c ****     #else
 317:Generated_Source\PSoC4/Cm0Start.c ****         unsigned regions = __cy_region_num;
 181              		.loc 1 317 0
 182 0006 224B     		ldr	r3, .L20
 183 0008 7B61     		str	r3, [r7, #20]
 318:Generated_Source\PSoC4/Cm0Start.c ****         const struct __cy_region *rptr = __cy_regions;
 184              		.loc 1 318 0
 185 000a 224B     		ldr	r3, .L20+4
 186 000c 3B61     		str	r3, [r7, #16]
 319:Generated_Source\PSoC4/Cm0Start.c **** 
 320:Generated_Source\PSoC4/Cm0Start.c ****         /* Initialize memory */
 321:Generated_Source\PSoC4/Cm0Start.c ****         for (regions = __cy_region_num; regions != 0u; regions--)
 187              		.loc 1 321 0
 188 000e 204B     		ldr	r3, .L20
 189 0010 7B61     		str	r3, [r7, #20]
 190 0012 35E0     		b	.L13
 191              	.L18:
 192              	.LBB2:
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccRJeaHW.s 			page 10


 322:Generated_Source\PSoC4/Cm0Start.c ****         {
 323:Generated_Source\PSoC4/Cm0Start.c ****             uint32 *src = (uint32 *)rptr->init;
 193              		.loc 1 323 0
 194 0014 3B69     		ldr	r3, [r7, #16]
 195 0016 1B68     		ldr	r3, [r3]
 196 0018 FB60     		str	r3, [r7, #12]
 324:Generated_Source\PSoC4/Cm0Start.c ****             uint32 *dst = (uint32 *)rptr->data;
 197              		.loc 1 324 0
 198 001a 3B69     		ldr	r3, [r7, #16]
 199 001c 5B68     		ldr	r3, [r3, #4]
 200 001e BB60     		str	r3, [r7, #8]
 325:Generated_Source\PSoC4/Cm0Start.c ****             unsigned limit = rptr->init_size;
 201              		.loc 1 325 0
 202 0020 3B69     		ldr	r3, [r7, #16]
 203 0022 9B68     		ldr	r3, [r3, #8]
 204 0024 3B60     		str	r3, [r7]
 326:Generated_Source\PSoC4/Cm0Start.c ****             unsigned count;
 327:Generated_Source\PSoC4/Cm0Start.c **** 
 328:Generated_Source\PSoC4/Cm0Start.c ****             for (count = 0u; count != limit; count += sizeof (uint32))
 205              		.loc 1 328 0
 206 0026 0023     		movs	r3, #0
 207 0028 7B60     		str	r3, [r7, #4]
 208 002a 0CE0     		b	.L14
 209              	.L15:
 329:Generated_Source\PSoC4/Cm0Start.c ****             {
 330:Generated_Source\PSoC4/Cm0Start.c ****                 *dst = *src;
 210              		.loc 1 330 0 discriminator 3
 211 002c FB68     		ldr	r3, [r7, #12]
 212 002e 1A68     		ldr	r2, [r3]
 213 0030 BB68     		ldr	r3, [r7, #8]
 214 0032 1A60     		str	r2, [r3]
 331:Generated_Source\PSoC4/Cm0Start.c ****                 dst++;
 215              		.loc 1 331 0 discriminator 3
 216 0034 BB68     		ldr	r3, [r7, #8]
 217 0036 0433     		adds	r3, r3, #4
 218 0038 BB60     		str	r3, [r7, #8]
 332:Generated_Source\PSoC4/Cm0Start.c ****                 src++;
 219              		.loc 1 332 0 discriminator 3
 220 003a FB68     		ldr	r3, [r7, #12]
 221 003c 0433     		adds	r3, r3, #4
 222 003e FB60     		str	r3, [r7, #12]
 328:Generated_Source\PSoC4/Cm0Start.c ****             {
 223              		.loc 1 328 0 discriminator 3
 224 0040 7B68     		ldr	r3, [r7, #4]
 225 0042 0433     		adds	r3, r3, #4
 226 0044 7B60     		str	r3, [r7, #4]
 227              	.L14:
 328:Generated_Source\PSoC4/Cm0Start.c ****             {
 228              		.loc 1 328 0 is_stmt 0 discriminator 1
 229 0046 7A68     		ldr	r2, [r7, #4]
 230 0048 3B68     		ldr	r3, [r7]
 231 004a 9A42     		cmp	r2, r3
 232 004c EED1     		bne	.L15
 333:Generated_Source\PSoC4/Cm0Start.c ****             }
 334:Generated_Source\PSoC4/Cm0Start.c ****             limit = rptr->zero_size;
 233              		.loc 1 334 0 is_stmt 1
 234 004e 3B69     		ldr	r3, [r7, #16]
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccRJeaHW.s 			page 11


 235 0050 DB68     		ldr	r3, [r3, #12]
 236 0052 3B60     		str	r3, [r7]
 335:Generated_Source\PSoC4/Cm0Start.c ****             for (count = 0u; count != limit; count += sizeof (uint32))
 237              		.loc 1 335 0
 238 0054 0023     		movs	r3, #0
 239 0056 7B60     		str	r3, [r7, #4]
 240 0058 08E0     		b	.L16
 241              	.L17:
 336:Generated_Source\PSoC4/Cm0Start.c ****             {
 337:Generated_Source\PSoC4/Cm0Start.c ****                 *dst = 0u;
 242              		.loc 1 337 0 discriminator 3
 243 005a BB68     		ldr	r3, [r7, #8]
 244 005c 0022     		movs	r2, #0
 245 005e 1A60     		str	r2, [r3]
 338:Generated_Source\PSoC4/Cm0Start.c ****                 dst++;
 246              		.loc 1 338 0 discriminator 3
 247 0060 BB68     		ldr	r3, [r7, #8]
 248 0062 0433     		adds	r3, r3, #4
 249 0064 BB60     		str	r3, [r7, #8]
 335:Generated_Source\PSoC4/Cm0Start.c ****             for (count = 0u; count != limit; count += sizeof (uint32))
 250              		.loc 1 335 0 discriminator 3
 251 0066 7B68     		ldr	r3, [r7, #4]
 252 0068 0433     		adds	r3, r3, #4
 253 006a 7B60     		str	r3, [r7, #4]
 254              	.L16:
 335:Generated_Source\PSoC4/Cm0Start.c ****             for (count = 0u; count != limit; count += sizeof (uint32))
 255              		.loc 1 335 0 is_stmt 0 discriminator 1
 256 006c 7A68     		ldr	r2, [r7, #4]
 257 006e 3B68     		ldr	r3, [r7]
 258 0070 9A42     		cmp	r2, r3
 259 0072 F2D1     		bne	.L17
 339:Generated_Source\PSoC4/Cm0Start.c ****             }
 340:Generated_Source\PSoC4/Cm0Start.c **** 
 341:Generated_Source\PSoC4/Cm0Start.c ****             rptr++;
 260              		.loc 1 341 0 is_stmt 1 discriminator 2
 261 0074 3B69     		ldr	r3, [r7, #16]
 262 0076 1033     		adds	r3, r3, #16
 263 0078 3B61     		str	r3, [r7, #16]
 264              	.LBE2:
 321:Generated_Source\PSoC4/Cm0Start.c ****         {
 265              		.loc 1 321 0 discriminator 2
 266 007a 7B69     		ldr	r3, [r7, #20]
 267 007c 013B     		subs	r3, r3, #1
 268 007e 7B61     		str	r3, [r7, #20]
 269              	.L13:
 321:Generated_Source\PSoC4/Cm0Start.c ****         {
 270              		.loc 1 321 0 is_stmt 0 discriminator 1
 271 0080 7B69     		ldr	r3, [r7, #20]
 272 0082 002B     		cmp	r3, #0
 273 0084 C6D1     		bne	.L18
 342:Generated_Source\PSoC4/Cm0Start.c ****         }
 343:Generated_Source\PSoC4/Cm0Start.c **** 
 344:Generated_Source\PSoC4/Cm0Start.c ****         /* Invoke static objects constructors */
 345:Generated_Source\PSoC4/Cm0Start.c ****         __libc_init_array();
 274              		.loc 1 345 0 is_stmt 1
 275 0086 FFF7FEFF 		bl	__libc_init_array
 346:Generated_Source\PSoC4/Cm0Start.c ****         (void) main();
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccRJeaHW.s 			page 12


 276              		.loc 1 346 0
 277 008a FFF7FEFF 		bl	main
 278              	.L19:
 347:Generated_Source\PSoC4/Cm0Start.c **** 
 348:Generated_Source\PSoC4/Cm0Start.c ****         while (1)
 349:Generated_Source\PSoC4/Cm0Start.c ****         {
 350:Generated_Source\PSoC4/Cm0Start.c ****             /* If main returns, make sure we don't return. */
 351:Generated_Source\PSoC4/Cm0Start.c ****         }
 279              		.loc 1 351 0 discriminator 1
 280 008e FEE7     		b	.L19
 281              	.L21:
 282              		.align	2
 283              	.L20:
 284 0090 00000000 		.word	__cy_region_num
 285 0094 00000000 		.word	__cy_regions
 286              		.cfi_endproc
 287              	.LFE3:
 288              		.size	Start_c, .-Start_c
 289              		.section	.text.Reset,"ax",%progbits
 290              		.align	2
 291              		.global	Reset
 292              		.code	16
 293              		.thumb_func
 294              		.type	Reset, %function
 295              	Reset:
 296              	.LFB4:
 352:Generated_Source\PSoC4/Cm0Start.c **** 
 353:Generated_Source\PSoC4/Cm0Start.c ****     #endif /* CY_BOOT_START_C_CALLBACK */
 354:Generated_Source\PSoC4/Cm0Start.c **** }
 355:Generated_Source\PSoC4/Cm0Start.c **** 
 356:Generated_Source\PSoC4/Cm0Start.c **** 
 357:Generated_Source\PSoC4/Cm0Start.c **** /*******************************************************************************
 358:Generated_Source\PSoC4/Cm0Start.c **** * Function Name: Reset
 359:Generated_Source\PSoC4/Cm0Start.c **** ****************************************************************************//**
 360:Generated_Source\PSoC4/Cm0Start.c **** *
 361:Generated_Source\PSoC4/Cm0Start.c **** * This function handles the reset interrupt for the GCC toolchain.  This is
 362:Generated_Source\PSoC4/Cm0Start.c **** * the first bit of code that is executed at startup.
 363:Generated_Source\PSoC4/Cm0Start.c **** *
 364:Generated_Source\PSoC4/Cm0Start.c **** *******************************************************************************/
 365:Generated_Source\PSoC4/Cm0Start.c **** void Reset(void)
 366:Generated_Source\PSoC4/Cm0Start.c **** {
 297              		.loc 1 366 0
 298              		.cfi_startproc
 299              		@ args = 0, pretend = 0, frame = 0
 300              		@ frame_needed = 1, uses_anonymous_args = 0
 301 0000 80B5     		push	{r7, lr}
 302              		.cfi_def_cfa_offset 8
 303              		.cfi_offset 7, -8
 304              		.cfi_offset 14, -4
 305 0002 00AF     		add	r7, sp, #0
 306              		.cfi_def_cfa_register 7
 367:Generated_Source\PSoC4/Cm0Start.c ****     #if (CYDEV_PROJ_TYPE == CYDEV_PROJ_TYPE_LOADABLE || CYDEV_PROJ_TYPE == CYDEV_PROJ_TYPE_LOADABLE
 368:Generated_Source\PSoC4/Cm0Start.c **** 
 369:Generated_Source\PSoC4/Cm0Start.c ****         /* The bootloadable application image is started at Reset() handler
 370:Generated_Source\PSoC4/Cm0Start.c ****         * as a result of a branch instruction execution from the bootloader.
 371:Generated_Source\PSoC4/Cm0Start.c ****         * So, the stack pointer needs to be reset to be sure that
 372:Generated_Source\PSoC4/Cm0Start.c ****         * there is no garbage in the stack.
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccRJeaHW.s 			page 13


 373:Generated_Source\PSoC4/Cm0Start.c ****         */
 374:Generated_Source\PSoC4/Cm0Start.c ****         __asm volatile ("MSR msp, %0\n" : : "r" ((uint32)&__cy_stack) : "sp");
 375:Generated_Source\PSoC4/Cm0Start.c ****     #endif /* CYDEV_PROJ_TYPE_LOADABLE */
 376:Generated_Source\PSoC4/Cm0Start.c **** 
 377:Generated_Source\PSoC4/Cm0Start.c ****     #if(CY_IP_SRSSLT)
 378:Generated_Source\PSoC4/Cm0Start.c ****         CySysWdtDisable();
 379:Generated_Source\PSoC4/Cm0Start.c ****     #endif  /* (CY_IP_SRSSLT) */
 380:Generated_Source\PSoC4/Cm0Start.c **** 
 381:Generated_Source\PSoC4/Cm0Start.c ****     #if ((CYDEV_BOOTLOADER_ENABLE) && (CYDEV_PROJ_TYPE != CYDEV_PROJ_TYPE_LOADABLEANDBOOTLOADER))
 382:Generated_Source\PSoC4/Cm0Start.c ****         CyBtldr_CheckLaunch();
 383:Generated_Source\PSoC4/Cm0Start.c ****     #endif /* ((CYDEV_BOOTLOADER_ENABLE) && (CYDEV_PROJ_TYPE != CYDEV_PROJ_TYPE_LOADABLEANDBOOTLOAD
 384:Generated_Source\PSoC4/Cm0Start.c ****     Start_c();
 307              		.loc 1 384 0
 308 0004 FFF7FEFF 		bl	Start_c
 309              		.cfi_endproc
 310              	.LFE4:
 311              		.size	Reset, .-Reset
 312              		.global	CyRamVectors
 313              		.section	.ramvectors,"aw",%progbits
 314              		.align	2
 315              		.type	CyRamVectors, %object
 316              		.size	CyRamVectors, 192
 317              	CyRamVectors:
 318 0000 00000000 		.space	192
 318      00000000 
 318      00000000 
 318      00000000 
 318      00000000 
 319              		.global	RomVectors
 320              		.section	.romvectors,"a",%progbits
 321              		.align	2
 322              		.type	RomVectors, %object
 323              		.size	RomVectors, 16
 324              	RomVectors:
 325 0000 00000000 		.word	__cy_stack
 326 0004 00000000 		.word	Reset
 327 0008 00000000 		.word	IntDefaultHandler
 328 000c 00000000 		.word	IntDefaultHandler
 329              		.section	.text.initialize_psoc,"ax",%progbits
 330              		.align	2
 331              		.global	initialize_psoc
 332              		.code	16
 333              		.thumb_func
 334              		.type	initialize_psoc, %function
 335              	initialize_psoc:
 336              	.LFB5:
 385:Generated_Source\PSoC4/Cm0Start.c **** }
 386:Generated_Source\PSoC4/Cm0Start.c **** 
 387:Generated_Source\PSoC4/Cm0Start.c **** #elif defined (__ICCARM__)
 388:Generated_Source\PSoC4/Cm0Start.c **** 
 389:Generated_Source\PSoC4/Cm0Start.c **** 
 390:Generated_Source\PSoC4/Cm0Start.c **** /*******************************************************************************
 391:Generated_Source\PSoC4/Cm0Start.c **** * Function Name: __low_level_init
 392:Generated_Source\PSoC4/Cm0Start.c **** ****************************************************************************//**
 393:Generated_Source\PSoC4/Cm0Start.c **** *
 394:Generated_Source\PSoC4/Cm0Start.c **** * This function performs early initializations for the IAR Embedded
 395:Generated_Source\PSoC4/Cm0Start.c **** * Workbench IDE. It is executed in the context of reset interrupt handler
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccRJeaHW.s 			page 14


 396:Generated_Source\PSoC4/Cm0Start.c **** * before the data sections are initialized.
 397:Generated_Source\PSoC4/Cm0Start.c **** *
 398:Generated_Source\PSoC4/Cm0Start.c **** * \return The value that determines whether or not data sections should be
 399:Generated_Source\PSoC4/Cm0Start.c **** * initialized by the system startup code:
 400:Generated_Source\PSoC4/Cm0Start.c **** *    0 - skip data sections initialization;
 401:Generated_Source\PSoC4/Cm0Start.c **** *    1 - initialize data sections;
 402:Generated_Source\PSoC4/Cm0Start.c **** *
 403:Generated_Source\PSoC4/Cm0Start.c **** *******************************************************************************/
 404:Generated_Source\PSoC4/Cm0Start.c **** #pragma inline = never
 405:Generated_Source\PSoC4/Cm0Start.c **** int __low_level_init(void)
 406:Generated_Source\PSoC4/Cm0Start.c **** {
 407:Generated_Source\PSoC4/Cm0Start.c ****     #if(CY_IP_SRSSLT)
 408:Generated_Source\PSoC4/Cm0Start.c ****         CySysWdtDisable();
 409:Generated_Source\PSoC4/Cm0Start.c ****     #endif  /* (CY_IP_SRSSLT) */
 410:Generated_Source\PSoC4/Cm0Start.c **** 
 411:Generated_Source\PSoC4/Cm0Start.c **** #if ((CYDEV_BOOTLOADER_ENABLE) && (CYDEV_PROJ_TYPE != CYDEV_PROJ_TYPE_LOADABLEANDBOOTLOADER))
 412:Generated_Source\PSoC4/Cm0Start.c ****     CyBtldr_CheckLaunch();
 413:Generated_Source\PSoC4/Cm0Start.c **** #endif /* ((CYDEV_BOOTLOADER_ENABLE) && (CYDEV_PROJ_TYPE != CYDEV_PROJ_TYPE_LOADABLEANDBOOTLOADER))
 414:Generated_Source\PSoC4/Cm0Start.c **** 
 415:Generated_Source\PSoC4/Cm0Start.c ****     /* Initialize data sections */
 416:Generated_Source\PSoC4/Cm0Start.c ****     __iar_data_init3();
 417:Generated_Source\PSoC4/Cm0Start.c **** 
 418:Generated_Source\PSoC4/Cm0Start.c ****     initialize_psoc();
 419:Generated_Source\PSoC4/Cm0Start.c **** 
 420:Generated_Source\PSoC4/Cm0Start.c ****     return 0;
 421:Generated_Source\PSoC4/Cm0Start.c **** }
 422:Generated_Source\PSoC4/Cm0Start.c **** 
 423:Generated_Source\PSoC4/Cm0Start.c **** #endif /* __GNUC__ */
 424:Generated_Source\PSoC4/Cm0Start.c **** 
 425:Generated_Source\PSoC4/Cm0Start.c **** 
 426:Generated_Source\PSoC4/Cm0Start.c **** /*******************************************************************************
 427:Generated_Source\PSoC4/Cm0Start.c **** * Ram Interrupt Vector table storage area. Must be placed at 0x20000000.
 428:Generated_Source\PSoC4/Cm0Start.c **** *******************************************************************************/
 429:Generated_Source\PSoC4/Cm0Start.c **** 
 430:Generated_Source\PSoC4/Cm0Start.c **** #if defined (__ICCARM__)
 431:Generated_Source\PSoC4/Cm0Start.c ****     #pragma location=".ramvectors"
 432:Generated_Source\PSoC4/Cm0Start.c **** #elif defined (__ARMCC_VERSION)
 433:Generated_Source\PSoC4/Cm0Start.c ****     #ifndef CY_SYS_RAM_VECTOR_SECTION
 434:Generated_Source\PSoC4/Cm0Start.c ****         #define CY_SYS_RAM_VECTOR_SECTION __attribute__((section(".ramvectors"), zero_init))
 435:Generated_Source\PSoC4/Cm0Start.c ****     #endif /* CY_SYS_RAM_VECTOR_SECTION */
 436:Generated_Source\PSoC4/Cm0Start.c ****     CY_SYS_RAM_VECTOR_SECTION    
 437:Generated_Source\PSoC4/Cm0Start.c **** #else
 438:Generated_Source\PSoC4/Cm0Start.c ****     #ifndef CY_SYS_RAM_VECTOR_SECTION
 439:Generated_Source\PSoC4/Cm0Start.c ****         #define CY_SYS_RAM_VECTOR_SECTION CY_SECTION(".ramvectors")
 440:Generated_Source\PSoC4/Cm0Start.c ****     #endif /* CY_SYS_RAM_VECTOR_SECTION */
 441:Generated_Source\PSoC4/Cm0Start.c ****     CY_SYS_RAM_VECTOR_SECTION
 442:Generated_Source\PSoC4/Cm0Start.c **** #endif  /* defined (__ICCARM__) */
 443:Generated_Source\PSoC4/Cm0Start.c **** cyisraddress CyRamVectors[CY_NUM_VECTORS];
 444:Generated_Source\PSoC4/Cm0Start.c **** 
 445:Generated_Source\PSoC4/Cm0Start.c **** 
 446:Generated_Source\PSoC4/Cm0Start.c **** /*******************************************************************************
 447:Generated_Source\PSoC4/Cm0Start.c **** * Rom Interrupt Vector table storage area. Must be 256-byte aligned.
 448:Generated_Source\PSoC4/Cm0Start.c **** *******************************************************************************/
 449:Generated_Source\PSoC4/Cm0Start.c **** 
 450:Generated_Source\PSoC4/Cm0Start.c **** #if defined(__ARMCC_VERSION)
 451:Generated_Source\PSoC4/Cm0Start.c ****     /* Suppress diagnostic message 1296-D: extended constant initialiser used */
 452:Generated_Source\PSoC4/Cm0Start.c ****     #pragma diag_suppress 1296
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccRJeaHW.s 			page 15


 453:Generated_Source\PSoC4/Cm0Start.c **** #endif  /* defined(__ARMCC_VERSION) */
 454:Generated_Source\PSoC4/Cm0Start.c **** 
 455:Generated_Source\PSoC4/Cm0Start.c **** #if defined (__ICCARM__)
 456:Generated_Source\PSoC4/Cm0Start.c ****     #pragma location=".romvectors"
 457:Generated_Source\PSoC4/Cm0Start.c ****     const intvec_elem __vector_table[CY_NUM_ROM_VECTORS] =
 458:Generated_Source\PSoC4/Cm0Start.c **** #else
 459:Generated_Source\PSoC4/Cm0Start.c ****     #ifndef CY_SYS_ROM_VECTOR_SECTION
 460:Generated_Source\PSoC4/Cm0Start.c ****         #define CY_SYS_ROM_VECTOR_SECTION CY_SECTION(".romvectors")
 461:Generated_Source\PSoC4/Cm0Start.c ****     #endif /* CY_SYS_ROM_VECTOR_SECTION */
 462:Generated_Source\PSoC4/Cm0Start.c ****     CY_SYS_ROM_VECTOR_SECTION
 463:Generated_Source\PSoC4/Cm0Start.c ****     const cyisraddress RomVectors[CY_NUM_ROM_VECTORS] =
 464:Generated_Source\PSoC4/Cm0Start.c **** #endif  /* defined (__ICCARM__) */
 465:Generated_Source\PSoC4/Cm0Start.c **** {
 466:Generated_Source\PSoC4/Cm0Start.c ****     CY_SYS_INITIAL_STACK_POINTER,   /* The initial stack pointer  0 */
 467:Generated_Source\PSoC4/Cm0Start.c ****     #if defined (__ICCARM__) /* The reset handler          1 */
 468:Generated_Source\PSoC4/Cm0Start.c ****         __iar_program_start,
 469:Generated_Source\PSoC4/Cm0Start.c ****     #else
 470:Generated_Source\PSoC4/Cm0Start.c ****         (cyisraddress)&Reset,
 471:Generated_Source\PSoC4/Cm0Start.c ****     #endif  /* defined (__ICCARM__) */
 472:Generated_Source\PSoC4/Cm0Start.c ****     &IntDefaultHandler,      /* The NMI handler            2 */
 473:Generated_Source\PSoC4/Cm0Start.c ****     &IntDefaultHandler,      /* The hard fault handler     3 */
 474:Generated_Source\PSoC4/Cm0Start.c **** };
 475:Generated_Source\PSoC4/Cm0Start.c **** 
 476:Generated_Source\PSoC4/Cm0Start.c **** #if defined(__ARMCC_VERSION)
 477:Generated_Source\PSoC4/Cm0Start.c ****     #pragma diag_default 1296
 478:Generated_Source\PSoC4/Cm0Start.c **** #endif  /* defined(__ARMCC_VERSION) */
 479:Generated_Source\PSoC4/Cm0Start.c **** 
 480:Generated_Source\PSoC4/Cm0Start.c **** 
 481:Generated_Source\PSoC4/Cm0Start.c **** /*******************************************************************************
 482:Generated_Source\PSoC4/Cm0Start.c **** * Function Name: initialize_psoc
 483:Generated_Source\PSoC4/Cm0Start.c **** ****************************************************************************//**
 484:Generated_Source\PSoC4/Cm0Start.c **** *
 485:Generated_Source\PSoC4/Cm0Start.c **** * This function is used to initialize the PSoC chip before calling main.
 486:Generated_Source\PSoC4/Cm0Start.c **** *
 487:Generated_Source\PSoC4/Cm0Start.c **** *******************************************************************************/
 488:Generated_Source\PSoC4/Cm0Start.c **** #if(defined(__GNUC__) && !defined(__ARMCC_VERSION))
 489:Generated_Source\PSoC4/Cm0Start.c **** __attribute__ ((constructor(101)))
 490:Generated_Source\PSoC4/Cm0Start.c **** #endif  /* (defined(__GNUC__) && !defined(__ARMCC_VERSION)) */
 491:Generated_Source\PSoC4/Cm0Start.c **** void initialize_psoc(void)
 492:Generated_Source\PSoC4/Cm0Start.c **** {
 337              		.loc 1 492 0
 338              		.cfi_startproc
 339              		@ args = 0, pretend = 0, frame = 8
 340              		@ frame_needed = 1, uses_anonymous_args = 0
 341 0000 80B5     		push	{r7, lr}
 342              		.cfi_def_cfa_offset 8
 343              		.cfi_offset 7, -8
 344              		.cfi_offset 14, -4
 345 0002 82B0     		sub	sp, sp, #8
 346              		.cfi_def_cfa_offset 16
 347 0004 00AF     		add	r7, sp, #0
 348              		.cfi_def_cfa_register 7
 493:Generated_Source\PSoC4/Cm0Start.c ****     uint32 indexInit;
 494:Generated_Source\PSoC4/Cm0Start.c **** 
 495:Generated_Source\PSoC4/Cm0Start.c ****     #if(CY_IP_CPUSSV2)
 496:Generated_Source\PSoC4/Cm0Start.c ****         #if (CY_IP_CPUSS_CM0)
 497:Generated_Source\PSoC4/Cm0Start.c ****             /***********************************************************************
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccRJeaHW.s 			page 16


 498:Generated_Source\PSoC4/Cm0Start.c ****             * Make sure that Vector Table is located at 0000_0000 in Flash, before
 499:Generated_Source\PSoC4/Cm0Start.c ****             * accessing RomVectors or calling functions that may be placed in
 500:Generated_Source\PSoC4/Cm0Start.c ****             * .psocinit (cyfitter_cfg and ClockSetup). Note The CY_CPUSS_CONFIG_REG
 501:Generated_Source\PSoC4/Cm0Start.c ****             * register is retention for the specified device family.
 502:Generated_Source\PSoC4/Cm0Start.c ****             ***********************************************************************/
 503:Generated_Source\PSoC4/Cm0Start.c ****             CY_CPUSS_CONFIG_REG &= (uint32) ~CY_CPUSS_CONFIG_VECT_IN_RAM;
 504:Generated_Source\PSoC4/Cm0Start.c ****         #endif /* (CY_IP_CPUSS_CM0) */
 505:Generated_Source\PSoC4/Cm0Start.c ****     #endif  /* (CY_IP_CPUSSV2) */
 506:Generated_Source\PSoC4/Cm0Start.c **** 
 507:Generated_Source\PSoC4/Cm0Start.c ****     /* Set Ram interrupt vectors to default functions. */
 508:Generated_Source\PSoC4/Cm0Start.c ****     for (indexInit = 0u; indexInit < CY_NUM_VECTORS; indexInit++)
 349              		.loc 1 508 0
 350 0006 0023     		movs	r3, #0
 351 0008 7B60     		str	r3, [r7, #4]
 352 000a 0FE0     		b	.L24
 353              	.L27:
 509:Generated_Source\PSoC4/Cm0Start.c ****     {
 510:Generated_Source\PSoC4/Cm0Start.c ****         CyRamVectors[indexInit] = (indexInit < CY_NUM_ROM_VECTORS) ?
 511:Generated_Source\PSoC4/Cm0Start.c ****             #if defined (__ICCARM__)
 512:Generated_Source\PSoC4/Cm0Start.c ****                 __vector_table[indexInit].__fun : &IntDefaultHandler;
 513:Generated_Source\PSoC4/Cm0Start.c ****             #else
 514:Generated_Source\PSoC4/Cm0Start.c ****                 RomVectors[indexInit] : &IntDefaultHandler;
 354              		.loc 1 514 0
 355 000c 7B68     		ldr	r3, [r7, #4]
 356 000e 032B     		cmp	r3, #3
 357 0010 04D8     		bhi	.L25
 358              		.loc 1 514 0 is_stmt 0 discriminator 1
 359 0012 104B     		ldr	r3, .L28
 360 0014 7A68     		ldr	r2, [r7, #4]
 361 0016 9200     		lsls	r2, r2, #2
 362 0018 D358     		ldr	r3, [r2, r3]
 363 001a 00E0     		b	.L26
 364              	.L25:
 365              		.loc 1 514 0 discriminator 2
 366 001c 0E4B     		ldr	r3, .L28+4
 367              	.L26:
 510:Generated_Source\PSoC4/Cm0Start.c ****             #if defined (__ICCARM__)
 368              		.loc 1 510 0 is_stmt 1 discriminator 2
 369 001e 0F4A     		ldr	r2, .L28+8
 370 0020 7968     		ldr	r1, [r7, #4]
 371 0022 8900     		lsls	r1, r1, #2
 372 0024 8B50     		str	r3, [r1, r2]
 508:Generated_Source\PSoC4/Cm0Start.c ****     {
 373              		.loc 1 508 0 discriminator 2
 374 0026 7B68     		ldr	r3, [r7, #4]
 375 0028 0133     		adds	r3, r3, #1
 376 002a 7B60     		str	r3, [r7, #4]
 377              	.L24:
 508:Generated_Source\PSoC4/Cm0Start.c ****     {
 378              		.loc 1 508 0 is_stmt 0 discriminator 1
 379 002c 7B68     		ldr	r3, [r7, #4]
 380 002e 2F2B     		cmp	r3, #47
 381 0030 ECD9     		bls	.L27
 515:Generated_Source\PSoC4/Cm0Start.c ****             #endif  /* defined (__ICCARM__) */
 516:Generated_Source\PSoC4/Cm0Start.c ****     }
 517:Generated_Source\PSoC4/Cm0Start.c **** 
 518:Generated_Source\PSoC4/Cm0Start.c ****     /* Initialize configuration registers. */
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccRJeaHW.s 			page 17


 519:Generated_Source\PSoC4/Cm0Start.c ****     cyfitter_cfg();
 382              		.loc 1 519 0 is_stmt 1
 383 0032 FFF7FEFF 		bl	cyfitter_cfg
 520:Generated_Source\PSoC4/Cm0Start.c **** 
 521:Generated_Source\PSoC4/Cm0Start.c ****     #if !defined (__ICCARM__)
 522:Generated_Source\PSoC4/Cm0Start.c ****         /* Actually, no need to clean this variable, just to make compiler happy. */
 523:Generated_Source\PSoC4/Cm0Start.c ****         cySysNoInitDataValid = 0u;
 384              		.loc 1 523 0
 385 0036 0A4B     		ldr	r3, .L28+12
 386 0038 0022     		movs	r2, #0
 387 003a 1A60     		str	r2, [r3]
 524:Generated_Source\PSoC4/Cm0Start.c ****     #endif  /* !defined (__ICCARM__) */
 525:Generated_Source\PSoC4/Cm0Start.c **** 
 526:Generated_Source\PSoC4/Cm0Start.c ****     #if (CYDEV_PROJ_TYPE != CYDEV_PROJ_TYPE_STANDARD)
 527:Generated_Source\PSoC4/Cm0Start.c **** 
 528:Generated_Source\PSoC4/Cm0Start.c ****         /* Need to make sure that this variable will not be optimized out */
 529:Generated_Source\PSoC4/Cm0Start.c ****         if (0u == cyBtldrRunType)
 530:Generated_Source\PSoC4/Cm0Start.c ****         {
 531:Generated_Source\PSoC4/Cm0Start.c ****             cyBtldrRunType = 0u;
 532:Generated_Source\PSoC4/Cm0Start.c ****         }
 533:Generated_Source\PSoC4/Cm0Start.c **** 
 534:Generated_Source\PSoC4/Cm0Start.c ****     #endif  /* (CYDEV_PROJ_TYPE != CYDEV_PROJ_TYPE_STANDARD) */
 535:Generated_Source\PSoC4/Cm0Start.c **** 
 536:Generated_Source\PSoC4/Cm0Start.c ****     #if (CY_IP_CPUSS_CM0)
 537:Generated_Source\PSoC4/Cm0Start.c ****         /* Vector Table is located at 0x2000:0000 in SRAM */
 538:Generated_Source\PSoC4/Cm0Start.c ****         CY_CPUSS_CONFIG_REG |= CY_CPUSS_CONFIG_VECT_IN_RAM;
 388              		.loc 1 538 0
 389 003c 8023     		movs	r3, #128
 390 003e DB05     		lsls	r3, r3, #23
 391 0040 8022     		movs	r2, #128
 392 0042 D205     		lsls	r2, r2, #23
 393 0044 1268     		ldr	r2, [r2]
 394 0046 0121     		movs	r1, #1
 395 0048 0A43     		orrs	r2, r1
 396 004a 1A60     		str	r2, [r3]
 539:Generated_Source\PSoC4/Cm0Start.c **** 	#else
 540:Generated_Source\PSoC4/Cm0Start.c **** 		(*(uint32 *)CYREG_CM0P_VTOR) = CY_CPUSS_CONFIG_VECT_ADDR_IN_RAM;
 541:Generated_Source\PSoC4/Cm0Start.c ****     #endif /* (CY_IP_CPUSS_CM0) */
 542:Generated_Source\PSoC4/Cm0Start.c **** }
 397              		.loc 1 542 0
 398 004c C046     		nop
 399 004e BD46     		mov	sp, r7
 400 0050 02B0     		add	sp, sp, #8
 401              		@ sp needed
 402 0052 80BD     		pop	{r7, pc}
 403              	.L29:
 404              		.align	2
 405              	.L28:
 406 0054 00000000 		.word	RomVectors
 407 0058 00000000 		.word	IntDefaultHandler
 408 005c 00000000 		.word	CyRamVectors
 409 0060 00000000 		.word	cySysNoInitDataValid
 410              		.cfi_endproc
 411              	.LFE5:
 412              		.size	initialize_psoc, .-initialize_psoc
 413              		.section	.init_array,"aw",%init_array
 414              		.align	2
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccRJeaHW.s 			page 18


 415 0000 00000000 		.word	initialize_psoc(target1)
 416              		.data
 417              		.align	2
 418              		.type	heapPointer.4844, %object
 419              		.size	heapPointer.4844, 4
 420              	heapPointer.4844:
 421 0000 00000000 		.word	end
 422              		.weak	__cy_region_num
 423              		.text
 424              	.Letext0:
 425              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 426              		.file 3 "Generated_Source\\PSoC4\\cytypes.h"
 427              		.section	.debug_info,"",%progbits
 428              	.Ldebug_info0:
 429 0000 0E030000 		.4byte	0x30e
 430 0004 0400     		.2byte	0x4
 431 0006 00000000 		.4byte	.Ldebug_abbrev0
 432 000a 04       		.byte	0x4
 433 000b 01       		.uleb128 0x1
 434 000c 2A010000 		.4byte	.LASF41
 435 0010 0C       		.byte	0xc
 436 0011 ED010000 		.4byte	.LASF42
 437 0015 CF000000 		.4byte	.LASF43
 438 0019 00000000 		.4byte	.Ldebug_ranges0+0
 439 001d 00000000 		.4byte	0
 440 0021 00000000 		.4byte	.Ldebug_line0
 441 0025 02       		.uleb128 0x2
 442 0026 01       		.byte	0x1
 443 0027 06       		.byte	0x6
 444 0028 AD020000 		.4byte	.LASF0
 445 002c 02       		.uleb128 0x2
 446 002d 01       		.byte	0x1
 447 002e 08       		.byte	0x8
 448 002f 7D000000 		.4byte	.LASF1
 449 0033 02       		.uleb128 0x2
 450 0034 02       		.byte	0x2
 451 0035 05       		.byte	0x5
 452 0036 8E020000 		.4byte	.LASF2
 453 003a 02       		.uleb128 0x2
 454 003b 02       		.byte	0x2
 455 003c 07       		.byte	0x7
 456 003d 34000000 		.4byte	.LASF3
 457 0041 02       		.uleb128 0x2
 458 0042 04       		.byte	0x4
 459 0043 05       		.byte	0x5
 460 0044 98020000 		.4byte	.LASF4
 461 0048 02       		.uleb128 0x2
 462 0049 04       		.byte	0x4
 463 004a 07       		.byte	0x7
 464 004b A2000000 		.4byte	.LASF5
 465 004f 02       		.uleb128 0x2
 466 0050 08       		.byte	0x8
 467 0051 05       		.byte	0x5
 468 0052 7B020000 		.4byte	.LASF6
 469 0056 02       		.uleb128 0x2
 470 0057 08       		.byte	0x8
 471 0058 07       		.byte	0x7
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccRJeaHW.s 			page 19


 472 0059 2D020000 		.4byte	.LASF7
 473 005d 03       		.uleb128 0x3
 474 005e 04       		.byte	0x4
 475 005f 05       		.byte	0x5
 476 0060 696E7400 		.ascii	"int\000"
 477 0064 02       		.uleb128 0x2
 478 0065 04       		.byte	0x4
 479 0066 07       		.byte	0x7
 480 0067 20020000 		.4byte	.LASF8
 481 006b 04       		.uleb128 0x4
 482 006c 06000000 		.4byte	.LASF10
 483 0070 02       		.byte	0x2
 484 0071 D8       		.byte	0xd8
 485 0072 64000000 		.4byte	0x64
 486 0076 02       		.uleb128 0x2
 487 0077 08       		.byte	0x8
 488 0078 04       		.byte	0x4
 489 0079 A1020000 		.4byte	.LASF9
 490 007d 05       		.uleb128 0x5
 491 007e C9000000 		.4byte	.LASF11
 492 0082 03       		.byte	0x3
 493 0083 E401     		.2byte	0x1e4
 494 0085 2C000000 		.4byte	0x2c
 495 0089 05       		.uleb128 0x5
 496 008a 0F020000 		.4byte	.LASF12
 497 008e 03       		.byte	0x3
 498 008f E601     		.2byte	0x1e6
 499 0091 48000000 		.4byte	0x48
 500 0095 02       		.uleb128 0x2
 501 0096 04       		.byte	0x4
 502 0097 04       		.byte	0x4
 503 0098 72000000 		.4byte	.LASF13
 504 009c 02       		.uleb128 0x2
 505 009d 08       		.byte	0x8
 506 009e 04       		.byte	0x4
 507 009f D6010000 		.4byte	.LASF14
 508 00a3 02       		.uleb128 0x2
 509 00a4 01       		.byte	0x1
 510 00a5 08       		.byte	0x8
 511 00a6 89020000 		.4byte	.LASF15
 512 00aa 05       		.uleb128 0x5
 513 00ab 00000000 		.4byte	.LASF16
 514 00af 03       		.byte	0x3
 515 00b0 9002     		.2byte	0x290
 516 00b2 B6000000 		.4byte	0xb6
 517 00b6 06       		.uleb128 0x6
 518 00b7 89000000 		.4byte	0x89
 519 00bb 05       		.uleb128 0x5
 520 00bc 4A020000 		.4byte	.LASF17
 521 00c0 03       		.byte	0x3
 522 00c1 A002     		.2byte	0x2a0
 523 00c3 C7000000 		.4byte	0xc7
 524 00c7 07       		.uleb128 0x7
 525 00c8 04       		.byte	0x4
 526 00c9 CD000000 		.4byte	0xcd
 527 00cd 08       		.uleb128 0x8
 528 00ce 02       		.uleb128 0x2
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccRJeaHW.s 			page 20


 529 00cf 04       		.byte	0x4
 530 00d0 07       		.byte	0x7
 531 00d1 72020000 		.4byte	.LASF18
 532 00d5 09       		.uleb128 0x9
 533 00d6 04       		.byte	0x4
 534 00d7 0A       		.uleb128 0xa
 535 00d8 A3000000 		.4byte	0xa3
 536 00dc 04       		.uleb128 0x4
 537 00dd 61020000 		.4byte	.LASF19
 538 00e1 01       		.byte	0x1
 539 00e2 DD       		.byte	0xdd
 540 00e3 2C000000 		.4byte	0x2c
 541 00e7 0B       		.uleb128 0xb
 542 00e8 D5020000 		.4byte	.LASF44
 543 00ec 10       		.byte	0x10
 544 00ed 01       		.byte	0x1
 545 00ee DF       		.byte	0xdf
 546 00ef 24010000 		.4byte	0x124
 547 00f3 0C       		.uleb128 0xc
 548 00f4 57000000 		.4byte	.LASF20
 549 00f8 01       		.byte	0x1
 550 00f9 E1       		.byte	0xe1
 551 00fa 24010000 		.4byte	0x124
 552 00fe 00       		.byte	0
 553 00ff 0C       		.uleb128 0xc
 554 0100 78000000 		.4byte	.LASF21
 555 0104 01       		.byte	0x1
 556 0105 E2       		.byte	0xe2
 557 0106 24010000 		.4byte	0x124
 558 010a 04       		.byte	0x4
 559 010b 0C       		.uleb128 0xc
 560 010c 57020000 		.4byte	.LASF22
 561 0110 01       		.byte	0x1
 562 0111 E3       		.byte	0xe3
 563 0112 6B000000 		.4byte	0x6b
 564 0116 08       		.byte	0x8
 565 0117 0C       		.uleb128 0xc
 566 0118 63000000 		.4byte	.LASF23
 567 011c 01       		.byte	0x1
 568 011d E4       		.byte	0xe4
 569 011e 6B000000 		.4byte	0x6b
 570 0122 0C       		.byte	0xc
 571 0123 00       		.byte	0
 572 0124 07       		.uleb128 0x7
 573 0125 04       		.byte	0x4
 574 0126 DC000000 		.4byte	0xdc
 575 012a 0D       		.uleb128 0xd
 576 012b BE010000 		.4byte	.LASF45
 577 012f 01       		.byte	0x1
 578 0130 6C       		.byte	0x6c
 579 0131 00000000 		.4byte	.LFB0
 580 0135 14000000 		.4byte	.LFE0-.LFB0
 581 0139 01       		.uleb128 0x1
 582 013a 9C       		.byte	0x9c
 583 013b 0E       		.uleb128 0xe
 584 013c B8010000 		.4byte	.LASF24
 585 0140 01       		.byte	0x1
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccRJeaHW.s 			page 21


 586 0141 FD       		.byte	0xfd
 587 0142 00000000 		.4byte	.LFB1
 588 0146 14000000 		.4byte	.LFE1-.LFB1
 589 014a 01       		.uleb128 0x1
 590 014b 9C       		.byte	0x9c
 591 014c 5F010000 		.4byte	0x15f
 592 0150 0F       		.uleb128 0xf
 593 0151 5C000000 		.4byte	.LASF26
 594 0155 01       		.byte	0x1
 595 0156 FD       		.byte	0xfd
 596 0157 5D000000 		.4byte	0x5d
 597 015b 02       		.uleb128 0x2
 598 015c 91       		.byte	0x91
 599 015d 74       		.sleb128 -12
 600 015e 00       		.byte	0
 601 015f 10       		.uleb128 0x10
 602 0160 D0010000 		.4byte	.LASF25
 603 0164 01       		.byte	0x1
 604 0165 1701     		.2byte	0x117
 605 0167 D5000000 		.4byte	0xd5
 606 016b 00000000 		.4byte	.LFB2
 607 016f 50000000 		.4byte	.LFE2-.LFB2
 608 0173 01       		.uleb128 0x1
 609 0174 9C       		.byte	0x9c
 610 0175 B6010000 		.4byte	0x1b6
 611 0179 11       		.uleb128 0x11
 612 017a CE020000 		.4byte	.LASF27
 613 017e 01       		.byte	0x1
 614 017f 1701     		.2byte	0x117
 615 0181 5D000000 		.4byte	0x5d
 616 0185 02       		.uleb128 0x2
 617 0186 91       		.byte	0x91
 618 0187 6C       		.sleb128 -20
 619 0188 12       		.uleb128 0x12
 620 0189 656E6400 		.ascii	"end\000"
 621 018d 01       		.byte	0x1
 622 018e 1901     		.2byte	0x119
 623 0190 5D000000 		.4byte	0x5d
 624 0194 13       		.uleb128 0x13
 625 0195 8B000000 		.4byte	.LASF28
 626 0199 01       		.byte	0x1
 627 019a 1A01     		.2byte	0x11a
 628 019c D5000000 		.4byte	0xd5
 629 01a0 02       		.uleb128 0x2
 630 01a1 91       		.byte	0x91
 631 01a2 74       		.sleb128 -12
 632 01a3 13       		.uleb128 0x13
 633 01a4 28000000 		.4byte	.LASF29
 634 01a8 01       		.byte	0x1
 635 01a9 1D01     		.2byte	0x11d
 636 01ab B6010000 		.4byte	0x1b6
 637 01af 05       		.uleb128 0x5
 638 01b0 03       		.byte	0x3
 639 01b1 00000000 		.4byte	heapPointer.4844
 640 01b5 00       		.byte	0
 641 01b6 07       		.uleb128 0x7
 642 01b7 04       		.byte	0x4
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccRJeaHW.s 			page 22


 643 01b8 7D000000 		.4byte	0x7d
 644 01bc 14       		.uleb128 0x14
 645 01bd 1A000000 		.4byte	.LASF30
 646 01c1 01       		.byte	0x1
 647 01c2 3801     		.2byte	0x138
 648 01c4 00000000 		.4byte	.LFB3
 649 01c8 98000000 		.4byte	.LFE3-.LFB3
 650 01cc 01       		.uleb128 0x1
 651 01cd 9C       		.byte	0x9c
 652 01ce 37020000 		.4byte	0x237
 653 01d2 13       		.uleb128 0x13
 654 01d3 C6020000 		.4byte	.LASF31
 655 01d7 01       		.byte	0x1
 656 01d8 3D01     		.2byte	0x13d
 657 01da 64000000 		.4byte	0x64
 658 01de 02       		.uleb128 0x2
 659 01df 91       		.byte	0x91
 660 01e0 74       		.sleb128 -12
 661 01e1 13       		.uleb128 0x13
 662 01e2 6D000000 		.4byte	.LASF32
 663 01e6 01       		.byte	0x1
 664 01e7 3E01     		.2byte	0x13e
 665 01e9 37020000 		.4byte	0x237
 666 01ed 02       		.uleb128 0x2
 667 01ee 91       		.byte	0x91
 668 01ef 70       		.sleb128 -16
 669 01f0 15       		.uleb128 0x15
 670 01f1 14000000 		.4byte	.LBB2
 671 01f5 66000000 		.4byte	.LBE2-.LBB2
 672 01f9 16       		.uleb128 0x16
 673 01fa 73726300 		.ascii	"src\000"
 674 01fe 01       		.byte	0x1
 675 01ff 4301     		.2byte	0x143
 676 0201 42020000 		.4byte	0x242
 677 0205 02       		.uleb128 0x2
 678 0206 91       		.byte	0x91
 679 0207 6C       		.sleb128 -20
 680 0208 16       		.uleb128 0x16
 681 0209 64737400 		.ascii	"dst\000"
 682 020d 01       		.byte	0x1
 683 020e 4401     		.2byte	0x144
 684 0210 42020000 		.4byte	0x242
 685 0214 02       		.uleb128 0x2
 686 0215 91       		.byte	0x91
 687 0216 68       		.sleb128 -24
 688 0217 13       		.uleb128 0x13
 689 0218 44020000 		.4byte	.LASF33
 690 021c 01       		.byte	0x1
 691 021d 4501     		.2byte	0x145
 692 021f 64000000 		.4byte	0x64
 693 0223 02       		.uleb128 0x2
 694 0224 91       		.byte	0x91
 695 0225 60       		.sleb128 -32
 696 0226 13       		.uleb128 0x13
 697 0227 22000000 		.4byte	.LASF34
 698 022b 01       		.byte	0x1
 699 022c 4601     		.2byte	0x146
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccRJeaHW.s 			page 23


 700 022e 64000000 		.4byte	0x64
 701 0232 02       		.uleb128 0x2
 702 0233 91       		.byte	0x91
 703 0234 64       		.sleb128 -28
 704 0235 00       		.byte	0
 705 0236 00       		.byte	0
 706 0237 07       		.uleb128 0x7
 707 0238 04       		.byte	0x4
 708 0239 3D020000 		.4byte	0x23d
 709 023d 0A       		.uleb128 0xa
 710 023e E7000000 		.4byte	0xe7
 711 0242 07       		.uleb128 0x7
 712 0243 04       		.byte	0x4
 713 0244 89000000 		.4byte	0x89
 714 0248 17       		.uleb128 0x17
 715 0249 24010000 		.4byte	.LASF46
 716 024d 01       		.byte	0x1
 717 024e 6D01     		.2byte	0x16d
 718 0250 00000000 		.4byte	.LFB4
 719 0254 08000000 		.4byte	.LFE4-.LFB4
 720 0258 01       		.uleb128 0x1
 721 0259 9C       		.byte	0x9c
 722 025a 18       		.uleb128 0x18
 723 025b DD010000 		.4byte	.LASF47
 724 025f 01       		.byte	0x1
 725 0260 EB01     		.2byte	0x1eb
 726 0262 00000000 		.4byte	.LFB5
 727 0266 64000000 		.4byte	.LFE5-.LFB5
 728 026a 01       		.uleb128 0x1
 729 026b 9C       		.byte	0x9c
 730 026c 80020000 		.4byte	0x280
 731 0270 13       		.uleb128 0x13
 732 0271 16020000 		.4byte	.LASF35
 733 0275 01       		.byte	0x1
 734 0276 ED01     		.2byte	0x1ed
 735 0278 89000000 		.4byte	0x89
 736 027c 02       		.uleb128 0x2
 737 027d 91       		.byte	0x91
 738 027e 74       		.sleb128 -12
 739 027f 00       		.byte	0
 740 0280 19       		.uleb128 0x19
 741 0281 B4000000 		.4byte	.LASF36
 742 0285 01       		.byte	0x1
 743 0286 4D       		.byte	0x4d
 744 0287 89000000 		.4byte	0x89
 745 028b 05       		.uleb128 0x5
 746 028c 03       		.byte	0x3
 747 028d 00000000 		.4byte	cySysNoInitDataValid
 748 0291 12       		.uleb128 0x12
 749 0292 656E6400 		.ascii	"end\000"
 750 0296 01       		.byte	0x1
 751 0297 1901     		.2byte	0x119
 752 0299 5D000000 		.4byte	0x5d
 753 029d 1A       		.uleb128 0x1a
 754 029e 3D020000 		.4byte	0x23d
 755 02a2 A8020000 		.4byte	0x2a8
 756 02a6 1B       		.uleb128 0x1b
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccRJeaHW.s 			page 24


 757 02a7 00       		.byte	0
 758 02a8 1C       		.uleb128 0x1c
 759 02a9 B9020000 		.4byte	.LASF37
 760 02ad 01       		.byte	0x1
 761 02ae E7       		.byte	0xe7
 762 02af B3020000 		.4byte	0x2b3
 763 02b3 0A       		.uleb128 0xa
 764 02b4 9D020000 		.4byte	0x29d
 765 02b8 1C       		.uleb128 0x1c
 766 02b9 47000000 		.4byte	.LASF38
 767 02bd 01       		.byte	0x1
 768 02be E8       		.byte	0xe8
 769 02bf D7000000 		.4byte	0xd7
 770 02c3 1A       		.uleb128 0x1a
 771 02c4 BB000000 		.4byte	0xbb
 772 02c8 D3020000 		.4byte	0x2d3
 773 02cc 1D       		.uleb128 0x1d
 774 02cd CE000000 		.4byte	0xce
 775 02d1 2F       		.byte	0x2f
 776 02d2 00       		.byte	0
 777 02d3 1E       		.uleb128 0x1e
 778 02d4 0D000000 		.4byte	.LASF39
 779 02d8 01       		.byte	0x1
 780 02d9 BB01     		.2byte	0x1bb
 781 02db C3020000 		.4byte	0x2c3
 782 02df 05       		.uleb128 0x5
 783 02e0 03       		.byte	0x3
 784 02e1 00000000 		.4byte	CyRamVectors
 785 02e5 1A       		.uleb128 0x1a
 786 02e6 F5020000 		.4byte	0x2f5
 787 02ea F5020000 		.4byte	0x2f5
 788 02ee 1D       		.uleb128 0x1d
 789 02ef CE000000 		.4byte	0xce
 790 02f3 03       		.byte	0x3
 791 02f4 00       		.byte	0
 792 02f5 0A       		.uleb128 0xa
 793 02f6 BB000000 		.4byte	0xbb
 794 02fa 1E       		.uleb128 0x1e
 795 02fb 97000000 		.4byte	.LASF40
 796 02ff 01       		.byte	0x1
 797 0300 CF01     		.2byte	0x1cf
 798 0302 0C030000 		.4byte	0x30c
 799 0306 05       		.uleb128 0x5
 800 0307 03       		.byte	0x3
 801 0308 00000000 		.4byte	RomVectors
 802 030c 0A       		.uleb128 0xa
 803 030d E5020000 		.4byte	0x2e5
 804 0311 00       		.byte	0
 805              		.section	.debug_abbrev,"",%progbits
 806              	.Ldebug_abbrev0:
 807 0000 01       		.uleb128 0x1
 808 0001 11       		.uleb128 0x11
 809 0002 01       		.byte	0x1
 810 0003 25       		.uleb128 0x25
 811 0004 0E       		.uleb128 0xe
 812 0005 13       		.uleb128 0x13
 813 0006 0B       		.uleb128 0xb
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccRJeaHW.s 			page 25


 814 0007 03       		.uleb128 0x3
 815 0008 0E       		.uleb128 0xe
 816 0009 1B       		.uleb128 0x1b
 817 000a 0E       		.uleb128 0xe
 818 000b 55       		.uleb128 0x55
 819 000c 17       		.uleb128 0x17
 820 000d 11       		.uleb128 0x11
 821 000e 01       		.uleb128 0x1
 822 000f 10       		.uleb128 0x10
 823 0010 17       		.uleb128 0x17
 824 0011 00       		.byte	0
 825 0012 00       		.byte	0
 826 0013 02       		.uleb128 0x2
 827 0014 24       		.uleb128 0x24
 828 0015 00       		.byte	0
 829 0016 0B       		.uleb128 0xb
 830 0017 0B       		.uleb128 0xb
 831 0018 3E       		.uleb128 0x3e
 832 0019 0B       		.uleb128 0xb
 833 001a 03       		.uleb128 0x3
 834 001b 0E       		.uleb128 0xe
 835 001c 00       		.byte	0
 836 001d 00       		.byte	0
 837 001e 03       		.uleb128 0x3
 838 001f 24       		.uleb128 0x24
 839 0020 00       		.byte	0
 840 0021 0B       		.uleb128 0xb
 841 0022 0B       		.uleb128 0xb
 842 0023 3E       		.uleb128 0x3e
 843 0024 0B       		.uleb128 0xb
 844 0025 03       		.uleb128 0x3
 845 0026 08       		.uleb128 0x8
 846 0027 00       		.byte	0
 847 0028 00       		.byte	0
 848 0029 04       		.uleb128 0x4
 849 002a 16       		.uleb128 0x16
 850 002b 00       		.byte	0
 851 002c 03       		.uleb128 0x3
 852 002d 0E       		.uleb128 0xe
 853 002e 3A       		.uleb128 0x3a
 854 002f 0B       		.uleb128 0xb
 855 0030 3B       		.uleb128 0x3b
 856 0031 0B       		.uleb128 0xb
 857 0032 49       		.uleb128 0x49
 858 0033 13       		.uleb128 0x13
 859 0034 00       		.byte	0
 860 0035 00       		.byte	0
 861 0036 05       		.uleb128 0x5
 862 0037 16       		.uleb128 0x16
 863 0038 00       		.byte	0
 864 0039 03       		.uleb128 0x3
 865 003a 0E       		.uleb128 0xe
 866 003b 3A       		.uleb128 0x3a
 867 003c 0B       		.uleb128 0xb
 868 003d 3B       		.uleb128 0x3b
 869 003e 05       		.uleb128 0x5
 870 003f 49       		.uleb128 0x49
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccRJeaHW.s 			page 26


 871 0040 13       		.uleb128 0x13
 872 0041 00       		.byte	0
 873 0042 00       		.byte	0
 874 0043 06       		.uleb128 0x6
 875 0044 35       		.uleb128 0x35
 876 0045 00       		.byte	0
 877 0046 49       		.uleb128 0x49
 878 0047 13       		.uleb128 0x13
 879 0048 00       		.byte	0
 880 0049 00       		.byte	0
 881 004a 07       		.uleb128 0x7
 882 004b 0F       		.uleb128 0xf
 883 004c 00       		.byte	0
 884 004d 0B       		.uleb128 0xb
 885 004e 0B       		.uleb128 0xb
 886 004f 49       		.uleb128 0x49
 887 0050 13       		.uleb128 0x13
 888 0051 00       		.byte	0
 889 0052 00       		.byte	0
 890 0053 08       		.uleb128 0x8
 891 0054 15       		.uleb128 0x15
 892 0055 00       		.byte	0
 893 0056 27       		.uleb128 0x27
 894 0057 19       		.uleb128 0x19
 895 0058 00       		.byte	0
 896 0059 00       		.byte	0
 897 005a 09       		.uleb128 0x9
 898 005b 0F       		.uleb128 0xf
 899 005c 00       		.byte	0
 900 005d 0B       		.uleb128 0xb
 901 005e 0B       		.uleb128 0xb
 902 005f 00       		.byte	0
 903 0060 00       		.byte	0
 904 0061 0A       		.uleb128 0xa
 905 0062 26       		.uleb128 0x26
 906 0063 00       		.byte	0
 907 0064 49       		.uleb128 0x49
 908 0065 13       		.uleb128 0x13
 909 0066 00       		.byte	0
 910 0067 00       		.byte	0
 911 0068 0B       		.uleb128 0xb
 912 0069 13       		.uleb128 0x13
 913 006a 01       		.byte	0x1
 914 006b 03       		.uleb128 0x3
 915 006c 0E       		.uleb128 0xe
 916 006d 0B       		.uleb128 0xb
 917 006e 0B       		.uleb128 0xb
 918 006f 3A       		.uleb128 0x3a
 919 0070 0B       		.uleb128 0xb
 920 0071 3B       		.uleb128 0x3b
 921 0072 0B       		.uleb128 0xb
 922 0073 01       		.uleb128 0x1
 923 0074 13       		.uleb128 0x13
 924 0075 00       		.byte	0
 925 0076 00       		.byte	0
 926 0077 0C       		.uleb128 0xc
 927 0078 0D       		.uleb128 0xd
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccRJeaHW.s 			page 27


 928 0079 00       		.byte	0
 929 007a 03       		.uleb128 0x3
 930 007b 0E       		.uleb128 0xe
 931 007c 3A       		.uleb128 0x3a
 932 007d 0B       		.uleb128 0xb
 933 007e 3B       		.uleb128 0x3b
 934 007f 0B       		.uleb128 0xb
 935 0080 49       		.uleb128 0x49
 936 0081 13       		.uleb128 0x13
 937 0082 38       		.uleb128 0x38
 938 0083 0B       		.uleb128 0xb
 939 0084 00       		.byte	0
 940 0085 00       		.byte	0
 941 0086 0D       		.uleb128 0xd
 942 0087 2E       		.uleb128 0x2e
 943 0088 00       		.byte	0
 944 0089 3F       		.uleb128 0x3f
 945 008a 19       		.uleb128 0x19
 946 008b 03       		.uleb128 0x3
 947 008c 0E       		.uleb128 0xe
 948 008d 3A       		.uleb128 0x3a
 949 008e 0B       		.uleb128 0xb
 950 008f 3B       		.uleb128 0x3b
 951 0090 0B       		.uleb128 0xb
 952 0091 27       		.uleb128 0x27
 953 0092 19       		.uleb128 0x19
 954 0093 8701     		.uleb128 0x87
 955 0095 19       		.uleb128 0x19
 956 0096 11       		.uleb128 0x11
 957 0097 01       		.uleb128 0x1
 958 0098 12       		.uleb128 0x12
 959 0099 06       		.uleb128 0x6
 960 009a 40       		.uleb128 0x40
 961 009b 18       		.uleb128 0x18
 962 009c 9642     		.uleb128 0x2116
 963 009e 19       		.uleb128 0x19
 964 009f 00       		.byte	0
 965 00a0 00       		.byte	0
 966 00a1 0E       		.uleb128 0xe
 967 00a2 2E       		.uleb128 0x2e
 968 00a3 01       		.byte	0x1
 969 00a4 3F       		.uleb128 0x3f
 970 00a5 19       		.uleb128 0x19
 971 00a6 03       		.uleb128 0x3
 972 00a7 0E       		.uleb128 0xe
 973 00a8 3A       		.uleb128 0x3a
 974 00a9 0B       		.uleb128 0xb
 975 00aa 3B       		.uleb128 0x3b
 976 00ab 0B       		.uleb128 0xb
 977 00ac 27       		.uleb128 0x27
 978 00ad 19       		.uleb128 0x19
 979 00ae 8701     		.uleb128 0x87
 980 00b0 19       		.uleb128 0x19
 981 00b1 11       		.uleb128 0x11
 982 00b2 01       		.uleb128 0x1
 983 00b3 12       		.uleb128 0x12
 984 00b4 06       		.uleb128 0x6
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccRJeaHW.s 			page 28


 985 00b5 40       		.uleb128 0x40
 986 00b6 18       		.uleb128 0x18
 987 00b7 9642     		.uleb128 0x2116
 988 00b9 19       		.uleb128 0x19
 989 00ba 01       		.uleb128 0x1
 990 00bb 13       		.uleb128 0x13
 991 00bc 00       		.byte	0
 992 00bd 00       		.byte	0
 993 00be 0F       		.uleb128 0xf
 994 00bf 05       		.uleb128 0x5
 995 00c0 00       		.byte	0
 996 00c1 03       		.uleb128 0x3
 997 00c2 0E       		.uleb128 0xe
 998 00c3 3A       		.uleb128 0x3a
 999 00c4 0B       		.uleb128 0xb
 1000 00c5 3B       		.uleb128 0x3b
 1001 00c6 0B       		.uleb128 0xb
 1002 00c7 49       		.uleb128 0x49
 1003 00c8 13       		.uleb128 0x13
 1004 00c9 02       		.uleb128 0x2
 1005 00ca 18       		.uleb128 0x18
 1006 00cb 00       		.byte	0
 1007 00cc 00       		.byte	0
 1008 00cd 10       		.uleb128 0x10
 1009 00ce 2E       		.uleb128 0x2e
 1010 00cf 01       		.byte	0x1
 1011 00d0 3F       		.uleb128 0x3f
 1012 00d1 19       		.uleb128 0x19
 1013 00d2 03       		.uleb128 0x3
 1014 00d3 0E       		.uleb128 0xe
 1015 00d4 3A       		.uleb128 0x3a
 1016 00d5 0B       		.uleb128 0xb
 1017 00d6 3B       		.uleb128 0x3b
 1018 00d7 05       		.uleb128 0x5
 1019 00d8 27       		.uleb128 0x27
 1020 00d9 19       		.uleb128 0x19
 1021 00da 49       		.uleb128 0x49
 1022 00db 13       		.uleb128 0x13
 1023 00dc 11       		.uleb128 0x11
 1024 00dd 01       		.uleb128 0x1
 1025 00de 12       		.uleb128 0x12
 1026 00df 06       		.uleb128 0x6
 1027 00e0 40       		.uleb128 0x40
 1028 00e1 18       		.uleb128 0x18
 1029 00e2 9642     		.uleb128 0x2116
 1030 00e4 19       		.uleb128 0x19
 1031 00e5 01       		.uleb128 0x1
 1032 00e6 13       		.uleb128 0x13
 1033 00e7 00       		.byte	0
 1034 00e8 00       		.byte	0
 1035 00e9 11       		.uleb128 0x11
 1036 00ea 05       		.uleb128 0x5
 1037 00eb 00       		.byte	0
 1038 00ec 03       		.uleb128 0x3
 1039 00ed 0E       		.uleb128 0xe
 1040 00ee 3A       		.uleb128 0x3a
 1041 00ef 0B       		.uleb128 0xb
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccRJeaHW.s 			page 29


 1042 00f0 3B       		.uleb128 0x3b
 1043 00f1 05       		.uleb128 0x5
 1044 00f2 49       		.uleb128 0x49
 1045 00f3 13       		.uleb128 0x13
 1046 00f4 02       		.uleb128 0x2
 1047 00f5 18       		.uleb128 0x18
 1048 00f6 00       		.byte	0
 1049 00f7 00       		.byte	0
 1050 00f8 12       		.uleb128 0x12
 1051 00f9 34       		.uleb128 0x34
 1052 00fa 00       		.byte	0
 1053 00fb 03       		.uleb128 0x3
 1054 00fc 08       		.uleb128 0x8
 1055 00fd 3A       		.uleb128 0x3a
 1056 00fe 0B       		.uleb128 0xb
 1057 00ff 3B       		.uleb128 0x3b
 1058 0100 05       		.uleb128 0x5
 1059 0101 49       		.uleb128 0x49
 1060 0102 13       		.uleb128 0x13
 1061 0103 3F       		.uleb128 0x3f
 1062 0104 19       		.uleb128 0x19
 1063 0105 3C       		.uleb128 0x3c
 1064 0106 19       		.uleb128 0x19
 1065 0107 00       		.byte	0
 1066 0108 00       		.byte	0
 1067 0109 13       		.uleb128 0x13
 1068 010a 34       		.uleb128 0x34
 1069 010b 00       		.byte	0
 1070 010c 03       		.uleb128 0x3
 1071 010d 0E       		.uleb128 0xe
 1072 010e 3A       		.uleb128 0x3a
 1073 010f 0B       		.uleb128 0xb
 1074 0110 3B       		.uleb128 0x3b
 1075 0111 05       		.uleb128 0x5
 1076 0112 49       		.uleb128 0x49
 1077 0113 13       		.uleb128 0x13
 1078 0114 02       		.uleb128 0x2
 1079 0115 18       		.uleb128 0x18
 1080 0116 00       		.byte	0
 1081 0117 00       		.byte	0
 1082 0118 14       		.uleb128 0x14
 1083 0119 2E       		.uleb128 0x2e
 1084 011a 01       		.byte	0x1
 1085 011b 3F       		.uleb128 0x3f
 1086 011c 19       		.uleb128 0x19
 1087 011d 03       		.uleb128 0x3
 1088 011e 0E       		.uleb128 0xe
 1089 011f 3A       		.uleb128 0x3a
 1090 0120 0B       		.uleb128 0xb
 1091 0121 3B       		.uleb128 0x3b
 1092 0122 05       		.uleb128 0x5
 1093 0123 27       		.uleb128 0x27
 1094 0124 19       		.uleb128 0x19
 1095 0125 8701     		.uleb128 0x87
 1096 0127 19       		.uleb128 0x19
 1097 0128 11       		.uleb128 0x11
 1098 0129 01       		.uleb128 0x1
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccRJeaHW.s 			page 30


 1099 012a 12       		.uleb128 0x12
 1100 012b 06       		.uleb128 0x6
 1101 012c 40       		.uleb128 0x40
 1102 012d 18       		.uleb128 0x18
 1103 012e 9642     		.uleb128 0x2116
 1104 0130 19       		.uleb128 0x19
 1105 0131 01       		.uleb128 0x1
 1106 0132 13       		.uleb128 0x13
 1107 0133 00       		.byte	0
 1108 0134 00       		.byte	0
 1109 0135 15       		.uleb128 0x15
 1110 0136 0B       		.uleb128 0xb
 1111 0137 01       		.byte	0x1
 1112 0138 11       		.uleb128 0x11
 1113 0139 01       		.uleb128 0x1
 1114 013a 12       		.uleb128 0x12
 1115 013b 06       		.uleb128 0x6
 1116 013c 00       		.byte	0
 1117 013d 00       		.byte	0
 1118 013e 16       		.uleb128 0x16
 1119 013f 34       		.uleb128 0x34
 1120 0140 00       		.byte	0
 1121 0141 03       		.uleb128 0x3
 1122 0142 08       		.uleb128 0x8
 1123 0143 3A       		.uleb128 0x3a
 1124 0144 0B       		.uleb128 0xb
 1125 0145 3B       		.uleb128 0x3b
 1126 0146 05       		.uleb128 0x5
 1127 0147 49       		.uleb128 0x49
 1128 0148 13       		.uleb128 0x13
 1129 0149 02       		.uleb128 0x2
 1130 014a 18       		.uleb128 0x18
 1131 014b 00       		.byte	0
 1132 014c 00       		.byte	0
 1133 014d 17       		.uleb128 0x17
 1134 014e 2E       		.uleb128 0x2e
 1135 014f 00       		.byte	0
 1136 0150 3F       		.uleb128 0x3f
 1137 0151 19       		.uleb128 0x19
 1138 0152 03       		.uleb128 0x3
 1139 0153 0E       		.uleb128 0xe
 1140 0154 3A       		.uleb128 0x3a
 1141 0155 0B       		.uleb128 0xb
 1142 0156 3B       		.uleb128 0x3b
 1143 0157 05       		.uleb128 0x5
 1144 0158 27       		.uleb128 0x27
 1145 0159 19       		.uleb128 0x19
 1146 015a 11       		.uleb128 0x11
 1147 015b 01       		.uleb128 0x1
 1148 015c 12       		.uleb128 0x12
 1149 015d 06       		.uleb128 0x6
 1150 015e 40       		.uleb128 0x40
 1151 015f 18       		.uleb128 0x18
 1152 0160 9642     		.uleb128 0x2116
 1153 0162 19       		.uleb128 0x19
 1154 0163 00       		.byte	0
 1155 0164 00       		.byte	0
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccRJeaHW.s 			page 31


 1156 0165 18       		.uleb128 0x18
 1157 0166 2E       		.uleb128 0x2e
 1158 0167 01       		.byte	0x1
 1159 0168 3F       		.uleb128 0x3f
 1160 0169 19       		.uleb128 0x19
 1161 016a 03       		.uleb128 0x3
 1162 016b 0E       		.uleb128 0xe
 1163 016c 3A       		.uleb128 0x3a
 1164 016d 0B       		.uleb128 0xb
 1165 016e 3B       		.uleb128 0x3b
 1166 016f 05       		.uleb128 0x5
 1167 0170 27       		.uleb128 0x27
 1168 0171 19       		.uleb128 0x19
 1169 0172 11       		.uleb128 0x11
 1170 0173 01       		.uleb128 0x1
 1171 0174 12       		.uleb128 0x12
 1172 0175 06       		.uleb128 0x6
 1173 0176 40       		.uleb128 0x40
 1174 0177 18       		.uleb128 0x18
 1175 0178 9642     		.uleb128 0x2116
 1176 017a 19       		.uleb128 0x19
 1177 017b 01       		.uleb128 0x1
 1178 017c 13       		.uleb128 0x13
 1179 017d 00       		.byte	0
 1180 017e 00       		.byte	0
 1181 017f 19       		.uleb128 0x19
 1182 0180 34       		.uleb128 0x34
 1183 0181 00       		.byte	0
 1184 0182 03       		.uleb128 0x3
 1185 0183 0E       		.uleb128 0xe
 1186 0184 3A       		.uleb128 0x3a
 1187 0185 0B       		.uleb128 0xb
 1188 0186 3B       		.uleb128 0x3b
 1189 0187 0B       		.uleb128 0xb
 1190 0188 49       		.uleb128 0x49
 1191 0189 13       		.uleb128 0x13
 1192 018a 02       		.uleb128 0x2
 1193 018b 18       		.uleb128 0x18
 1194 018c 00       		.byte	0
 1195 018d 00       		.byte	0
 1196 018e 1A       		.uleb128 0x1a
 1197 018f 01       		.uleb128 0x1
 1198 0190 01       		.byte	0x1
 1199 0191 49       		.uleb128 0x49
 1200 0192 13       		.uleb128 0x13
 1201 0193 01       		.uleb128 0x1
 1202 0194 13       		.uleb128 0x13
 1203 0195 00       		.byte	0
 1204 0196 00       		.byte	0
 1205 0197 1B       		.uleb128 0x1b
 1206 0198 21       		.uleb128 0x21
 1207 0199 00       		.byte	0
 1208 019a 00       		.byte	0
 1209 019b 00       		.byte	0
 1210 019c 1C       		.uleb128 0x1c
 1211 019d 34       		.uleb128 0x34
 1212 019e 00       		.byte	0
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccRJeaHW.s 			page 32


 1213 019f 03       		.uleb128 0x3
 1214 01a0 0E       		.uleb128 0xe
 1215 01a1 3A       		.uleb128 0x3a
 1216 01a2 0B       		.uleb128 0xb
 1217 01a3 3B       		.uleb128 0x3b
 1218 01a4 0B       		.uleb128 0xb
 1219 01a5 49       		.uleb128 0x49
 1220 01a6 13       		.uleb128 0x13
 1221 01a7 3F       		.uleb128 0x3f
 1222 01a8 19       		.uleb128 0x19
 1223 01a9 3C       		.uleb128 0x3c
 1224 01aa 19       		.uleb128 0x19
 1225 01ab 00       		.byte	0
 1226 01ac 00       		.byte	0
 1227 01ad 1D       		.uleb128 0x1d
 1228 01ae 21       		.uleb128 0x21
 1229 01af 00       		.byte	0
 1230 01b0 49       		.uleb128 0x49
 1231 01b1 13       		.uleb128 0x13
 1232 01b2 2F       		.uleb128 0x2f
 1233 01b3 0B       		.uleb128 0xb
 1234 01b4 00       		.byte	0
 1235 01b5 00       		.byte	0
 1236 01b6 1E       		.uleb128 0x1e
 1237 01b7 34       		.uleb128 0x34
 1238 01b8 00       		.byte	0
 1239 01b9 03       		.uleb128 0x3
 1240 01ba 0E       		.uleb128 0xe
 1241 01bb 3A       		.uleb128 0x3a
 1242 01bc 0B       		.uleb128 0xb
 1243 01bd 3B       		.uleb128 0x3b
 1244 01be 05       		.uleb128 0x5
 1245 01bf 49       		.uleb128 0x49
 1246 01c0 13       		.uleb128 0x13
 1247 01c1 3F       		.uleb128 0x3f
 1248 01c2 19       		.uleb128 0x19
 1249 01c3 02       		.uleb128 0x2
 1250 01c4 18       		.uleb128 0x18
 1251 01c5 00       		.byte	0
 1252 01c6 00       		.byte	0
 1253 01c7 00       		.byte	0
 1254              		.section	.debug_aranges,"",%progbits
 1255 0000 44000000 		.4byte	0x44
 1256 0004 0200     		.2byte	0x2
 1257 0006 00000000 		.4byte	.Ldebug_info0
 1258 000a 04       		.byte	0x4
 1259 000b 00       		.byte	0
 1260 000c 0000     		.2byte	0
 1261 000e 0000     		.2byte	0
 1262 0010 00000000 		.4byte	.LFB0
 1263 0014 14000000 		.4byte	.LFE0-.LFB0
 1264 0018 00000000 		.4byte	.LFB1
 1265 001c 14000000 		.4byte	.LFE1-.LFB1
 1266 0020 00000000 		.4byte	.LFB2
 1267 0024 50000000 		.4byte	.LFE2-.LFB2
 1268 0028 00000000 		.4byte	.LFB3
 1269 002c 98000000 		.4byte	.LFE3-.LFB3
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccRJeaHW.s 			page 33


 1270 0030 00000000 		.4byte	.LFB4
 1271 0034 08000000 		.4byte	.LFE4-.LFB4
 1272 0038 00000000 		.4byte	.LFB5
 1273 003c 64000000 		.4byte	.LFE5-.LFB5
 1274 0040 00000000 		.4byte	0
 1275 0044 00000000 		.4byte	0
 1276              		.section	.debug_ranges,"",%progbits
 1277              	.Ldebug_ranges0:
 1278 0000 00000000 		.4byte	.LFB0
 1279 0004 14000000 		.4byte	.LFE0
 1280 0008 00000000 		.4byte	.LFB1
 1281 000c 14000000 		.4byte	.LFE1
 1282 0010 00000000 		.4byte	.LFB2
 1283 0014 50000000 		.4byte	.LFE2
 1284 0018 00000000 		.4byte	.LFB3
 1285 001c 98000000 		.4byte	.LFE3
 1286 0020 00000000 		.4byte	.LFB4
 1287 0024 08000000 		.4byte	.LFE4
 1288 0028 00000000 		.4byte	.LFB5
 1289 002c 64000000 		.4byte	.LFE5
 1290 0030 00000000 		.4byte	0
 1291 0034 00000000 		.4byte	0
 1292              		.section	.debug_line,"",%progbits
 1293              	.Ldebug_line0:
 1294 0000 CB010000 		.section	.debug_str,"MS",%progbits,1
 1294      0200C700 
 1294      00000201 
 1294      FB0E0D00 
 1294      01010101 
 1295              	.LASF16:
 1296 0000 72656733 		.ascii	"reg32\000"
 1296      3200
 1297              	.LASF10:
 1298 0006 73697A65 		.ascii	"size_t\000"
 1298      5F7400
 1299              	.LASF39:
 1300 000d 43795261 		.ascii	"CyRamVectors\000"
 1300      6D566563 
 1300      746F7273 
 1300      00
 1301              	.LASF30:
 1302 001a 53746172 		.ascii	"Start_c\000"
 1302      745F6300 
 1303              	.LASF34:
 1304 0022 636F756E 		.ascii	"count\000"
 1304      7400
 1305              	.LASF29:
 1306 0028 68656170 		.ascii	"heapPointer\000"
 1306      506F696E 
 1306      74657200 
 1307              	.LASF3:
 1308 0034 73686F72 		.ascii	"short unsigned int\000"
 1308      7420756E 
 1308      7369676E 
 1308      65642069 
 1308      6E7400
 1309              	.LASF38:
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccRJeaHW.s 			page 34


 1310 0047 5F5F6379 		.ascii	"__cy_region_num\000"
 1310      5F726567 
 1310      696F6E5F 
 1310      6E756D00 
 1311              	.LASF20:
 1312 0057 696E6974 		.ascii	"init\000"
 1312      00
 1313              	.LASF26:
 1314 005c 73746174 		.ascii	"status\000"
 1314      757300
 1315              	.LASF23:
 1316 0063 7A65726F 		.ascii	"zero_size\000"
 1316      5F73697A 
 1316      6500
 1317              	.LASF32:
 1318 006d 72707472 		.ascii	"rptr\000"
 1318      00
 1319              	.LASF13:
 1320 0072 666C6F61 		.ascii	"float\000"
 1320      7400
 1321              	.LASF21:
 1322 0078 64617461 		.ascii	"data\000"
 1322      00
 1323              	.LASF1:
 1324 007d 756E7369 		.ascii	"unsigned char\000"
 1324      676E6564 
 1324      20636861 
 1324      7200
 1325              	.LASF28:
 1326 008b 72657475 		.ascii	"returnValue\000"
 1326      726E5661 
 1326      6C756500 
 1327              	.LASF40:
 1328 0097 526F6D56 		.ascii	"RomVectors\000"
 1328      6563746F 
 1328      727300
 1329              	.LASF5:
 1330 00a2 6C6F6E67 		.ascii	"long unsigned int\000"
 1330      20756E73 
 1330      69676E65 
 1330      6420696E 
 1330      7400
 1331              	.LASF36:
 1332 00b4 63795379 		.ascii	"cySysNoInitDataValid\000"
 1332      734E6F49 
 1332      6E697444 
 1332      61746156 
 1332      616C6964 
 1333              	.LASF11:
 1334 00c9 75696E74 		.ascii	"uint8\000"
 1334      3800
 1335              	.LASF43:
 1336 00cf 433A5C55 		.ascii	"C:\\Users\\Larry\\Documents\\PSoC Creator\\bwsi\\UA"
 1336      73657273 
 1336      5C4C6172 
 1336      72795C44 
 1336      6F63756D 
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccRJeaHW.s 			page 35


 1337 00fc 52545265 		.ascii	"RTReverse\\Workspace01\\UARTReverse.cydsn\000"
 1337      76657273 
 1337      655C576F 
 1337      726B7370 
 1337      61636530 
 1338              	.LASF46:
 1339 0124 52657365 		.ascii	"Reset\000"
 1339      7400
 1340              	.LASF41:
 1341 012a 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1341      43313120 
 1341      352E342E 
 1341      31203230 
 1341      31363036 
 1342 015d 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 1342      20726576 
 1342      6973696F 
 1342      6E203233 
 1342      37373135 
 1343 0190 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1343      66756E63 
 1343      74696F6E 
 1343      2D736563 
 1343      74696F6E 
 1344              	.LASF24:
 1345 01b8 5F657869 		.ascii	"_exit\000"
 1345      7400
 1346              	.LASF45:
 1347 01be 496E7444 		.ascii	"IntDefaultHandler\000"
 1347      65666175 
 1347      6C744861 
 1347      6E646C65 
 1347      7200
 1348              	.LASF25:
 1349 01d0 5F736272 		.ascii	"_sbrk\000"
 1349      6B00
 1350              	.LASF14:
 1351 01d6 646F7562 		.ascii	"double\000"
 1351      6C6500
 1352              	.LASF47:
 1353 01dd 696E6974 		.ascii	"initialize_psoc\000"
 1353      69616C69 
 1353      7A655F70 
 1353      736F6300 
 1354              	.LASF42:
 1355 01ed 47656E65 		.ascii	"Generated_Source\\PSoC4\\Cm0Start.c\000"
 1355      72617465 
 1355      645F536F 
 1355      75726365 
 1355      5C50536F 
 1356              	.LASF12:
 1357 020f 75696E74 		.ascii	"uint32\000"
 1357      333200
 1358              	.LASF35:
 1359 0216 696E6465 		.ascii	"indexInit\000"
 1359      78496E69 
 1359      7400
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccRJeaHW.s 			page 36


 1360              	.LASF8:
 1361 0220 756E7369 		.ascii	"unsigned int\000"
 1361      676E6564 
 1361      20696E74 
 1361      00
 1362              	.LASF7:
 1363 022d 6C6F6E67 		.ascii	"long long unsigned int\000"
 1363      206C6F6E 
 1363      6720756E 
 1363      7369676E 
 1363      65642069 
 1364              	.LASF33:
 1365 0244 6C696D69 		.ascii	"limit\000"
 1365      7400
 1366              	.LASF17:
 1367 024a 63796973 		.ascii	"cyisraddress\000"
 1367      72616464 
 1367      72657373 
 1367      00
 1368              	.LASF22:
 1369 0257 696E6974 		.ascii	"init_size\000"
 1369      5F73697A 
 1369      6500
 1370              	.LASF19:
 1371 0261 5F5F6379 		.ascii	"__cy_byte_align8\000"
 1371      5F627974 
 1371      655F616C 
 1371      69676E38 
 1371      00
 1372              	.LASF18:
 1373 0272 73697A65 		.ascii	"sizetype\000"
 1373      74797065 
 1373      00
 1374              	.LASF6:
 1375 027b 6C6F6E67 		.ascii	"long long int\000"
 1375      206C6F6E 
 1375      6720696E 
 1375      7400
 1376              	.LASF15:
 1377 0289 63686172 		.ascii	"char\000"
 1377      00
 1378              	.LASF2:
 1379 028e 73686F72 		.ascii	"short int\000"
 1379      7420696E 
 1379      7400
 1380              	.LASF4:
 1381 0298 6C6F6E67 		.ascii	"long int\000"
 1381      20696E74 
 1381      00
 1382              	.LASF9:
 1383 02a1 6C6F6E67 		.ascii	"long double\000"
 1383      20646F75 
 1383      626C6500 
 1384              	.LASF0:
 1385 02ad 7369676E 		.ascii	"signed char\000"
 1385      65642063 
 1385      68617200 
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccRJeaHW.s 			page 37


 1386              	.LASF37:
 1387 02b9 5F5F6379 		.ascii	"__cy_regions\000"
 1387      5F726567 
 1387      696F6E73 
 1387      00
 1388              	.LASF31:
 1389 02c6 72656769 		.ascii	"regions\000"
 1389      6F6E7300 
 1390              	.LASF27:
 1391 02ce 6E627974 		.ascii	"nbytes\000"
 1391      657300
 1392              	.LASF44:
 1393 02d5 5F5F6379 		.ascii	"__cy_region\000"
 1393      5F726567 
 1393      696F6E00 
 1394              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
